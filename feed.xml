<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://dev-yakuza.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/" rel="alternate" type="text/html"/><updated>2020-09-14T10:04:41+09:00</updated><id>https://dev-yakuza.github.io/feed.xml</id><title type="html">dev-yakuza</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ja"><title type="html">Rubyの文字列</title><link href="https://dev-yakuza.github.io/ruby/string/" rel="alternate" type="text/html" title="Rubyの文字列"/><published>2020-08-21T00:00:00+09:00</published><updated>2020-09-04T14:36:22+09:00</updated><id>https://dev-yakuza.github.io/ruby/string-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/ruby/string/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#文字列検索&quot;&gt;文字列検索&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#文字列の変換&quot;&gt;文字列の変換&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#正規表現&quot;&gt;正規表現&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#メター文字&quot;&gt;メター文字&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#パターンマッチング&quot;&gt;パターンマッチング&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#regexpクラス&quot;&gt;Regexpクラス&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#正規表現オブジェクト&quot;&gt;正規表現オブジェクト&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#シンボル&quot;&gt;シンボル&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#シンボルと文字列&quot;&gt;シンボルと文字列&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#シンボルの活用&quot;&gt;シンボルの活用&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#パーセント技法&quot;&gt;パーセント技法&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;このブログではRubyで文字列を使うによって役に立てる方法について紹介します。&lt;/p&gt; &lt;h2 id=&quot;文字列検索&quot;&gt;文字列検索&lt;/h2&gt; &lt;p&gt;Rubyで文字列を検索するときは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index&lt;/code&gt;メソッドを使います。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ABCD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;検索した文字列が当該文字列に存在する場合、当該文字列の位置をかえします。存在しない場合&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nil&lt;/code&gt;をかえします。&lt;/p&gt; &lt;h2 id=&quot;文字列の変換&quot;&gt;文字列の変換&lt;/h2&gt; &lt;p&gt;文字列の各文字をindexで参照することができるし変換することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Apple Juice&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;O&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;n&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ge&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Orange Juice&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上の例でもわかると思いますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[4] = &quot;ge&quot;&lt;/code&gt;なように文字列の長さが違っても文字列を変換することができます。&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;正規表現&quot;&gt;正規表現&lt;/h2&gt; &lt;p&gt;他の言語と同じようにRubyでも正規表現式を使って文字列を検索することができます。&lt;/p&gt; &lt;h3 id=&quot;メター文字&quot;&gt;メター文字&lt;/h3&gt; &lt;p&gt;正規表現にはメター文字（特殊な意味を持ってる文字）を使って正規表現式を作ります。&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;メター文字&lt;/th&gt; &lt;th&gt;説明&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;[]&lt;/td&gt; &lt;td&gt;[]中にある文字中で1文字&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;.&lt;/td&gt; &lt;td&gt;任意の1文字&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;*&lt;/td&gt; &lt;td&gt;直前の表現を0回以上反復&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;+&lt;/td&gt; &lt;td&gt;直前の表現を1回以上反復&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;?&lt;/td&gt; &lt;td&gt;直前の表現を0回または1回反復&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;()&lt;/td&gt; &lt;td&gt;正規表現のグループ&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;a|b&lt;/td&gt; &lt;td&gt;a, b中で1つ&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;\s&lt;/td&gt; &lt;td&gt;空白文字&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;\w&lt;/td&gt; &lt;td&gt;英数字やアンダーバー(_)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;\d&lt;/td&gt; &lt;td&gt;数字(0~9)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;^&lt;/td&gt; &lt;td&gt;一番前&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;$&lt;/td&gt; &lt;td&gt;一番後ろ&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3 id=&quot;パターンマッチング&quot;&gt;パターンマッチング&lt;/h3&gt; &lt;p&gt;正規表現式を使って文字列を検索することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/R.by/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Let's study Ruby!&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 12&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;文字列検索関数である&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index&lt;/code&gt;と同じようにパターンが一致すると、一致したパターンのindexをかえして、パターンがマッチングしてない場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nil&lt;/code&gt;をかえします。&lt;/p&gt; &lt;h3 id=&quot;regexpクラス&quot;&gt;Regexpクラス&lt;/h3&gt; &lt;p&gt;正規表現を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Regexp&lt;/code&gt;クラスの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new&lt;/code&gt;メソッドを使って正規表現オブジェクトを生成することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Regexp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;R.by&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Let's study Ruby!&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 12&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;正規表現オブジェクト&quot;&gt;正規表現オブジェクト&lt;/h3&gt; &lt;p&gt;正規表現オブジェクトを使うと正規表現式をもっと効果的使うことができます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;正規表現オブジェクトの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;: xを使って正規表現式中に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;を使ったコメントを追加することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/R.by # Search Ruby/x&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Let's study Ruby!&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 12&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;正規表現オブジェクトの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;: iを使って大小文字と関係なく文字列を探すことができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/r.by/i&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Let's study Ruby!&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 12&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;シンボル&quot;&gt;シンボル&lt;/h2&gt; &lt;p&gt;シンボル(symbol)は任意の文字列と1対1で対応する値を表すクラスです。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:apple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:apple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:orange&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# true&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# false&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;aとbは同じ名前のシンボルなので同じオブジェクトを表してます。&lt;/p&gt; &lt;h3 id=&quot;シンボルと文字列&quot;&gt;シンボルと文字列&lt;/h3&gt; &lt;p&gt;シンボルオブジェクトへ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;to_s&lt;/code&gt;を使うと文字列に変換することができます。文字列へ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intern&lt;/code&gt;を使うとシンボルへ変換することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:apple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;apple&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# apple&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# apple&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# false&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# true&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;intern&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# true&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;シンボルの活用&quot;&gt;シンボルの活用&lt;/h3&gt; &lt;p&gt;シンボルは数値と同じものなので文字列を使うよりメモリや実行スピードの面で効率的な場合があります。 심벌은 수치와 똑같은 것이므로 문자열을 사용하는 것보다 메모리나 실행 속도면에서 효율적인 경우가 많습니다.&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;triangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;triangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 12&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;シンボルは普通ハッシューのキーで使います。&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;パーセント技法&quot;&gt;パーセント技法&lt;/h2&gt; &lt;p&gt;文字列は普通ダブルクォーテーションやシングルクォーテーションを使って表示しますた、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;でも表示することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%{This string has &quot; character}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# This string has &quot; character&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%Q{This string has &quot; character}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# This string has &quot; character&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%q{This string has ' character}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# This string has ' character&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;また、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%w&lt;/code&gt;を使ってスペースで区分された文字列を配列で変換することもできます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(apple orange banana)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# apple&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# orange&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# banana&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRubyで文字列を使う方法について説明しました。正規表現は他の言語でもたくさん使ってるので、よく覚えとくと色んなところで活用できると思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/string/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/string/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">RubyのObject</title><link href="https://dev-yakuza.github.io/ruby/object/" rel="alternate" type="text/html" title="RubyのObject"/><published>2020-07-16T00:00:00+09:00</published><updated>2020-08-27T19:13:43+09:00</updated><id>https://dev-yakuza.github.io/ruby/object-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/ruby/object/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#classとobject&quot;&gt;ClassとObject&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#objectのメソッド&quot;&gt;Objectのメソッド&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#数値変換メソッド&quot;&gt;数値変換メソッド&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#範囲objectのメソッド&quot;&gt;範囲Objectのメソッド&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;Rubyでデータの基本単位をObjectと言います。例えば、Arrayとか変数もObjectに該当します。このブログポストではRubyのObjectに関して内容を共有します。&lt;/p&gt; &lt;h2 id=&quot;classとobject&quot;&gt;ClassとObject&lt;/h2&gt; &lt;p&gt;ClassはObjectの性質と機能などの設計図と同じことで、ClassからObjectを生成することができます。&lt;/p&gt; &lt;p&gt;Object中でデータの種類による保存先があるので、Objectに値を保存することができます。&lt;/p&gt; &lt;p&gt;下記はRubyで使える主なObjectです。&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Object&lt;/th&gt; &lt;th&gt;説明&lt;/th&gt; &lt;th&gt;クラス名&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;数値Object&lt;/td&gt; &lt;td&gt;数値を表す。&lt;/td&gt; &lt;td&gt;Numericなど&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;文字列Object&lt;/td&gt; &lt;td&gt;文字列を表す。&lt;/td&gt; &lt;td&gt;String&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;正規表現Object&lt;/td&gt; &lt;td&gt;文字列マッチングのためのパタンを表す。&lt;/td&gt; &lt;td&gt;Regexp&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;時間Object&lt;/td&gt; &lt;td&gt;時間を表す。&lt;/td&gt; &lt;td&gt;Time&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ファイルObject&lt;/td&gt; &lt;td&gt;ファイルのRead/Writeを実行するために使う。&lt;/td&gt; &lt;td&gt;File&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ハッシュObject&lt;/td&gt; &lt;td&gt;ハッシューを表す。&lt;/td&gt; &lt;td&gt;Hash&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;配列Object&lt;/td&gt; &lt;td&gt;配列を表す。&lt;/td&gt; &lt;td&gt;Array&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;objectのメソッド&quot;&gt;Objectのメソッド&lt;/h2&gt; &lt;p&gt;Objectには値を保存すること意外にも値を操作するためのメソッドを持ってることができます。&lt;/p&gt; &lt;p&gt;下記はClassとObjectによるメソッドの種類を表しています。&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;メソッドの種類&lt;/th&gt; &lt;th&gt;説明&lt;/th&gt; &lt;th&gt;例&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;インスタンスメソッド&lt;/td&gt; &lt;td&gt;Objectを使ってメソッドを呼び出す。&lt;/td&gt; &lt;td&gt;“1234”.split()&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Classメソッド&lt;/td&gt; &lt;td&gt;Classを使ってメソッドを呼び出す。&lt;/td&gt; &lt;td&gt;File.delete&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;関数的メソッド&lt;/td&gt; &lt;td&gt;普通のメソッド。&lt;/td&gt; &lt;td&gt;print(3)&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h3 id=&quot;数値変換メソッド&quot;&gt;数値変換メソッド&lt;/h3&gt; &lt;p&gt;下記はRubyで数値を変換するためのメソッドです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Integer&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# -3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Float&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# -3.0&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Round: 素数点以下を丸する&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;round&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# -3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;round&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;文字列を数字に変換&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# string to float&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;123.23&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 123.23&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# string to int&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;123.23&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 123&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;範囲objectのメソッド&quot;&gt;範囲Objectのメソッド&lt;/h3&gt; &lt;p&gt;Rubyでは下記のように範囲Objectを使うことができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;または下記のように範囲Classを使って範囲を作ることができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このように生成された範囲Objectでは下記のようなメソッドを使うことができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;begin&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 5&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のように範囲を配列で保存することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# [1, 2, 3, 4, 5]&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ただし、昇順で宣言された範囲だけ配列に変換することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# []&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRubyのObjectに関する概念を見て、関連内容もみました。Rubyでは基本的変数と配列などもObjectなのでいつもObjectを考えてプログラミングをすることがいいと思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/object/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/object/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">React NativeでAdmobのNative Advanced広告を使う方法</title><link href="https://dev-yakuza.github.io/react-native/react-native-admob-native-ads/" rel="alternate" type="text/html" title="React NativeでAdmobのNative Advanced広告を使う方法"/><published>2020-06-25T00:00:00+09:00</published><updated>2020-06-24T11:32:23+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-admob-native-ads-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-admob-native-ads/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#目次&quot;&gt;目次&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-admob-native-adsインストール&quot;&gt;react-native-admob-native-adsインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-admob-native-ads設定&quot;&gt;react-native-admob-native-ads設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-admob-native-ads使い方&quot;&gt;react-native-admob-native-ads使い方&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#他のコンポーネント&quot;&gt;他のコンポーネント&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;React Nativeを使ってアプリを開発する時、AdmobのBanner広告を結構使いました。AdmobのBanner広告は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;のV6を使って実装しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;しかし、トーイプロジェクトを進める時、AdmobのNative Advanced広告を使う必要がありました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/clog/development-journal/&quot; target=&quot;_blank&quot;&gt;「Clog」 サービス開発日誌(React Native, Laravel, Django)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;残念ながら、react-native-firebaseではNative Advanced広告をサーポートしてないです。詳しく内容は下記のリンクを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://invertase.canny.io/react-native-firebase/p/new-native-ad-format&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;New Native Ad Format&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;このブログポストではReact NativeでAdmobのNative Advanced広告を使うため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-admob-native-ads&lt;/code&gt;ライブラリを使う方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-admob-native-ads&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;react-native-admob-native-adsインストール&quot;&gt;react-native-admob-native-adsインストール&lt;/h2&gt; &lt;p&gt;下記のコマンドを使ってreact-native-admob-native-adsをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-admob-native-ads &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;react-native-admob-native-ads設定&quot;&gt;react-native-admob-native-ads設定&lt;/h2&gt; &lt;p&gt;react-native-admob-native-adsを使ってNative Advanced広告を表示するためには下記のように設定する必要があります。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#ios-setup&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;iOS Setup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#android-setup&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Android Setup&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;しかし、私は既にreact-native-firebaseを使っているので、上の設定はしませんんでした。react-native-firebaseを使ってAdmobを設定する方法については下記のリンクを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;react-native-admob-native-ads使い方&quot;&gt;react-native-admob-native-ads使い方&lt;/h2&gt; &lt;p&gt;公式ドキュメントへ詳しく使い方が載せております。下記のリンクを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#basic-usage-example&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Basic Usage Example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記のソースコードはreact-native-admob-native-adsを使ってNative Advanced広告を表示するため、私がアプリで使ってるソースコードです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Platform&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;styled-components/native&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NativeAdView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IconView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HeadlineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TaglineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MediaView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-admob-native-ads&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FastImage&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-fast-image&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;~/ENV&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` background-color: #FFFFFF; margin-bottom: 12px; height: 330px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdsContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NativeAdView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdsContents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` background-color: #FFFFFF; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` padding: 16px 8px 8px 16px; flex-direction: row; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IconView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 32px; height: 32px; border-radius: 32px; background-color: #EEEEEE; border-width: 1px; border-color: #EEEEEE; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserInfoContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` flex: 1; margin-horizontal: 8px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HeadlineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; font-weight: 600; color: #2A365D; width: 100%; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PublishedDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; font-weight: 300; color: #2A365D; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertisementImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MediaView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 100%; height: 209px; background-color: #FFFFFF; border-top-width: 1px; border-bottom-width: 1px; border-color: #EEEEEE; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` height: 64px justify-content: center; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TaglineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` color: #2A365D; font-size: 16px; line-height: 22px; font-weight: 400; padding: 4px 8px 16px 8px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AuthorImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FastImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 32px; height: 32px; border-radius: 32px; background-color: #EEEEEE; border-width: 1px; border-color: #EEEEEE; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AuthorName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; width: 100%; background-color: #ECEFF1; width: 80px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PublishedDatePlaceholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; font-weight: 300; width: 100px; background-color: #ECEFF1; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MainImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 100%; height: 209px; background-color: #CFD8DC; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PostDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` background-color: #ECEFF1; font-size: 16px; line-height: 22px; font-weight: 400; margin: 4px 8px 16px 8px; width: 80%; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TEST_NATIVE_AD_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;YOUR IOS NATIVE ADVANCE ID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;YOUR ANDROID NATIVE ADVANCE ID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NativeBanner&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NodeJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;NativeBanner failed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdLoaded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Ad has loaded&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancelTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showDelay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__DEV__&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TEST_NATIVE_AD_ID&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeAdsId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdsContainer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdLoaded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onAdLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enableTestMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__DEV__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delayAdLoading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showDelay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdsContents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AuthorImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;~/Assets/Images/author.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserInfoContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserName&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt; : &amp;lt;AuthorName /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PublishedDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Sponsor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/PublishedDate&amp;gt; : &amp;lt;PublishedDatePlaceholder /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/AdvertiserInfoContainer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Header&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertisementImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resizeMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MainImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserDescription&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt; : &amp;lt;PostDescription /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Content&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/AdsContents&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/AdsContainer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Container&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentDidCatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[NativeBanner] ERROR: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancelTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancelTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NativeBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;他のコンポーネント&quot;&gt;他のコンポーネント&lt;/h2&gt; &lt;p&gt;AdmobのNative Advanced広告は自分のデザインに合わせて自由に変更することができます。下記のリンクを見て、使えるコンポーネントを確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#-reference&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-admob-native-ads reference&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでReact NativeでAdmobのNative Advanced広告を表示する方法を見てみました。今後はもっと自由に広告をデザインして、ユーザのUXを守れながら、広告を提供してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-admob-native-ads/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-admob-native-ads/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">Git FTPを使ってファイルアップロード</title><link href="https://dev-yakuza.github.io/git/git-ftp/" rel="alternate" type="text/html" title="Git FTPを使ってファイルアップロード"/><published>2020-06-24T00:00:00+09:00</published><updated>2020-06-24T08:58:52+09:00</updated><id>https://dev-yakuza.github.io/git/git-ftp-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/git/git-ftp/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#目次&quot;&gt;目次&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#git-ftpインストール&quot;&gt;Git FTPインストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#使い方&quot;&gt;使い方&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#setup&quot;&gt;Setup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#init&quot;&gt;Init&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#catchup&quot;&gt;Catchup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#push&quot;&gt;Push&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;トーイプロジェクトを開発する時、FTPを使ってファイルをサーバへアップロードして、デプロイする必要がありました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/clog/development-journal/&quot; target=&quot;_blank&quot;&gt;「Clog」 サービス開発日誌(React Native, Laravel, Django)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;このようにGitで管理するファイルをFTPを使ってデプロイする場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git FTP&lt;/code&gt;を使うと、簡単にデプロイすることができます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/git-ftp/git-ftp&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Git FTP&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;git-ftpインストール&quot;&gt;Git FTPインストール&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;macOS&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記のコマンドを使ってGit FTPをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;brotli brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git-ftp &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Others&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;他のOSを使ってる方は、下記のリンクを参考してインストールします。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/git-ftp/git-ftp/blob/master/INSTALL.md&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Git FTP Installation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt; &lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt; &lt;p&gt;Git FTPを使うため、下記のコマンドでFTPの情報を設定します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config git-ftp.url &lt;span class=&quot;s2&quot;&gt;&quot;ftp://example.com/ftp/server/address&quot;&lt;/span&gt; git config git-ftp.user &lt;span class=&quot;s2&quot;&gt;&quot;user-id&quot;&lt;/span&gt; git config git-ftp.password &lt;span class=&quot;s2&quot;&gt;&quot;user-password&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;init&quot;&gt;Init&lt;/h3&gt; &lt;p&gt;サーバへまだファイルをアップロードしてない場合、下記のコマンドを使って初期化や全てのファイルをアップロードします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git ftp init &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;catchup&quot;&gt;Catchup&lt;/h3&gt; &lt;p&gt;既にFTPを使ってファイルをアップロードした場合、下記のコマンドを使ってアップロードされたファイルを同期化します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git ftp catchup &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;push&quot;&gt;Push&lt;/h3&gt; &lt;p&gt;全ての設定が終わりました。開発をするためファイルを修正したら、普通に下記のコマンドでGitを実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Modfiy some source codes&lt;/span&gt; git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Fix some bugs'&lt;/span&gt; git push origin master &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;その後、FTPを使ってファイルをアップロードするため、下記のコマンドを実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git ftp push &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでGit FTPを使う方法について見てみました。最近は普通FTPでファイルをアップロードしたら、デプロイしたりしないので、あまり、役に立たないと思いますが、私みたいに特別な状況の場合、結構使えると思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/2020/git-ftp/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/git/2020/git-ftp/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">React NativeでYoutubeを表示する</title><link href="https://dev-yakuza.github.io/react-native/react-native-youtube/" rel="alternate" type="text/html" title="React NativeでYoutubeを表示する"/><published>2020-06-23T00:00:00+09:00</published><updated>2020-06-27T13:52:07+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-youtube-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-youtube/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#目次&quot;&gt;目次&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-youtubeインストールや準備&quot;&gt;react-native-youtubeインストールや準備&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-youtube使い方&quot;&gt;react-native-youtube使い方&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#ビデオ再生&quot;&gt;ビデオ再生&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#flatlistで使う方法&quot;&gt;FlatListで使う方法&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;React Nativeでトーイプロジェクトを作る時、Youtubeビデオを表示する必要がありました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/clog/development-journal/&quot; target=&quot;_blank&quot;&gt;「Clog」 サービス開発日誌(React Native, Laravel, Django)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;このブログポストではReact NativeプロジェクトでYoutubeビデオを表示するため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-youtube&lt;/code&gt;ライブラリを使う方法について説明します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/davidohayon669/react-native-youtube&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-youtube&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ここで紹介するソースコードはGitHubで確認できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/react-native-youtube-example&quot; target=&quot;_blank&quot;&gt;React Native Youtube Example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;react-native-youtubeインストールや準備&quot;&gt;react-native-youtubeインストールや準備&lt;/h2&gt; &lt;p&gt;下記のコマンドを使ってreact-native-youtubeをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-youtube &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;iOSで使うため、下記のコマンドを実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ios pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;アンドロイドではreact-native-youtubeを使うためには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Youtube developer API key&lt;/code&gt;が必要です。下記のリンクを使ってYoutube developer API keyを生成します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://developers.google.com/youtube/android/player/register&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Youtube Developer API Key for Android&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;react-native-youtube使い方&quot;&gt;react-native-youtube使い方&lt;/h2&gt; &lt;h3 id=&quot;ビデオ再生&quot;&gt;ビデオ再生&lt;/h3&gt; &lt;p&gt;react-native-youtubeを使ってReact NativeでYoutubeを再生するためには下記のようにソースコードを追加します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-youtube&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SafeAreaView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;videoId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;KVZ-P-ZI6W4&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YOUR_YOUTUBE_DEVELOPER_API_KEY_FOR_ANDROID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeState:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeQuality&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeQuality: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onError: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/SafeAreaView&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;flatlistで使う方法&quot;&gt;FlatListで使う方法&lt;/h3&gt; &lt;p&gt;アンドロイドではreact-native-youtubeを使って複数のYoutubeを同じ画面で表示や再生することができません。このIssueについて詳しくは下記のリンクを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/davidohayon669/react-native-youtube#multiple-youtube--instances-on-android&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Multiple Youtube instance on Android&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;したがって、アンドロイドFlatListを使って複数のビデオを表示して、自動再生するためにはFlatListの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewabilityConfig&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onViewableItemsChanged&lt;/code&gt;を使って実装することができます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-youtube&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ActivityIndicator&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;large&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListVideo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewAreaCoveragePercentThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VIDEO_LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewabilityConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewableItemsChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyExtractor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;renderItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visablePostIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;videoId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YOUR_YOUTUBE_DEVELOPER_API_KEY_FOR_ANDROID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeState:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeQuality&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeQuality: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onError: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;p&gt;上のソースコードをもっと詳しく見ると、&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewAreaCoveragePercentThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewabilityConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上のように画面へ表示されたItemがどのぐらい見えると、画面へ表示されたかを判断できるような基準を作成します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewableItemsChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして画面へ表示されたItemが変更される時Callされる&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onViewableItemsChanged&lt;/code&gt;を使って現在表示された複数のItem中で一番最初のItemのIndexを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useState&lt;/code&gt;を使って保存します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;renderItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visablePostIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;videoId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YOUR_YOUTUBE_DEVELOPER_API_KEY_FOR_ANDROID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeState:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeQuality&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeQuality: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onError: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このように保存したIndexを比較して最初のItemのビデオだけ表示して再生するように設定することができます。このように修正すると、複数のビデオの自動再生することができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでReact NativeでYoutubeを再生する方法について見てみました。ここで紹介したソースコードはGitHubで確認できますので、全てのソースコードを見て、参考しても良いかと思います。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/react-native-youtube-example&quot; target=&quot;_blank&quot;&gt;React Native Youtube Example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-youtube/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-youtube/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">「Clog」サービス開発日誌(React Native, Laravel, Django)</title><link href="https://dev-yakuza.github.io/clog/development-journal/" rel="alternate" type="text/html" title="「Clog」サービス開発日誌(React Native, Laravel, Django)"/><published>2020-06-22T00:00:00+09:00</published><updated>2020-06-27T13:52:07+09:00</updated><id>https://dev-yakuza.github.io/clog/development-journal-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/clog/development-journal/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#目次&quot;&gt;目次&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#clogとは&quot;&gt;Clogとは&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#なぜ作ることになったか&quot;&gt;なぜ作ることになったか&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#サービス企画&quot;&gt;サービス企画&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#デザイン&quot;&gt;デザイン&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#システム構成&quot;&gt;システム構成&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#db設計&quot;&gt;DB設計&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#apiサーバー開発&quot;&gt;APIサーバー開発&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#クローリングサーバ開発&quot;&gt;クローリングサーバ開発&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#アプリ開発&quot;&gt;アプリ開発&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#開発中の問題&quot;&gt;開発中の問題&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#dothomeホスティング&quot;&gt;Dothomeホスティング&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ビデオ再生&quot;&gt;ビデオ再生&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#reject&quot;&gt;Reject&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#開発期間&quot;&gt;開発期間&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#懐古&quot;&gt;懐古&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;もう16番目のトーイプロジェクトです。下記のリンクで今まで私が開発したトーイプロジェクトを確認できます。気になる方は下記のリンクで確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/app/list/&quot; target=&quot;_blank&quot;&gt;JeongHean’s App List&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;トーイプロジェクトを開発しながら作成した開発日誌もあります。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBooアプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/kumoncho/development-journal/&quot; target=&quot;_blank&quot;&gt;Kumonchoアプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/ildangongbu/development-journal/&quot; target=&quot;_blank&quot;&gt;일단공부アプリ開発日誌(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;私は主にFacebookのグループで開発、スタートアッなどの情報を見てます。しかし、Facebookがこのような情報を共有するため生まれたプラットフォームではないので、要らない情報もたくさん持ってます。&lt;/p&gt; &lt;p&gt;それで私に必要な情報だけを集めて見せるアプリがあれば、いいかなと思ってこのようなサービスを企画や開発することになりました。&lt;/p&gt; &lt;h2 id=&quot;clogとは&quot;&gt;Clogとは&lt;/h2&gt; &lt;p&gt;Clogは開発、スタートアップやトレンドなどの情報を取得するため、ブログ、検索やFacebookなどで探した不便さを改善するため、1つの場所へ集めて見せるサービスです。（まだ、韓国語版しかないです。）&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Clog紹介ページ: &lt;a href=&quot;https://dev-yakuza.github.io/app/clog/&quot; target=&quot;_blank&quot;&gt;Clog - 世界の全ての情報をまとめて見る&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下記はアプリダウンロードリンクです。&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://apps.apple.com/app/clog/id1513780724&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る, ios ダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.clog&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る, 안드로이드 ダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;なぜ作ることになったか&quot;&gt;なぜ作ることになったか&lt;/h2&gt; &lt;p&gt;概要でも少し話しましたが、私は開発/スタートアップ/トレンドなどの情報をFacebookのグールプで取得してます。また、MediumやGitHubなどの個人ブログも検索をして探して見てます。&lt;/p&gt; &lt;p&gt;このように必要な情報を取得するため、Facebookを確認したりいいブログを探して見たりすることが大変だし、このような方式は欲しい情報だけ見ることができないです。&lt;/p&gt; &lt;p&gt;それで開発/スタートアップ/トレンドなどの情報を1つの場所でまとめて見るサービスを作成したら役に立てるかなと思ってこのようなサービスを開発することになりました。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/background.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/background.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;サービス企画&quot;&gt;サービス企画&lt;/h2&gt; &lt;p&gt;一旦ネーミングはClogの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt;logの次のバージョンを意味しております。また、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;が英語の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;See&lt;/code&gt;と発音が似てるので、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;See log&lt;/code&gt;、つまり記録を見ると言う意味も持ってます。&lt;/p&gt; &lt;p&gt;ClogのMVP(Minimum Viable Product: 最小機能製品)は下記のように定義しました。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;情報収集: 開発/スタートアップ/トレンドなどと関係ある情報、特にブログを集める。&lt;/li&gt; &lt;li&gt;情報提供API: 集めた情報をAPIで提供する。&lt;/li&gt; &lt;li&gt;ブログリスト: APIを使ってブログポストリストを取得して見せる。&lt;/li&gt; &lt;li&gt;ブログの詳細: リストで詳しくみたいItemを選択すると、そのブログの詳細内容が見れる。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;他のアプリを開発した時より、MVPがとてもシンプールでした。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;記事を集めて、記事を見せる。&lt;/code&gt;へ集中しました。&lt;/p&gt; &lt;h2 id=&quot;デザイン&quot;&gt;デザイン&lt;/h2&gt; &lt;p&gt;私はデザインは私がやるものではないと思って生きて来た開発者です。だからこそ、デザインが一番大変です。小さい会社でフロントエンドを開発するときは開発者がUI/UXもやってるので、ツールを使うことでは慣れてますが、問題を解決する開発とは違って、デザインはセンスの問題なので、多く大変さを感じてます。&lt;/p&gt; &lt;p&gt;そしてもトーイプロジェクトを進める時考えて、失敗してどんどん上手くなってるのかと思います。やはり、練習が一番大事ですね。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/logo.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る. ロゴデザイン&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/logo.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る. ロゴデザイン&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;ロゴは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;See log&lt;/code&gt;からアイデアを思い出しました。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;見る&lt;/code&gt;と言う意味を強調するため&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;を人の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;目&lt;/code&gt;の形にデザインしてみました。また、大きいロゴでは目を開いてlogを見るイメージで、眉毛のイメージも追加して瞳もlogの方に近くなるようにデザインしてみました。&lt;/p&gt; &lt;p&gt;メインの色は信頼と安定感を感じる青色系にして、ちょっと新鮮さを出すため明るさを上げました。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/all_design.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。ロゴデザイン&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/all_design.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。ロゴデザイン&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリの全般的なデザインは最初１〜２ページだけでしたが、開発しながらどんどん必要な機能が多くなって上記のようにデザインが増えました。全てのデザインは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sketchapp&lt;/code&gt;で作成しました。&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;システム構成&quot;&gt;システム構成&lt;/h2&gt; &lt;p&gt;Clogは下記のようなシステで構成されております。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/system-architecture.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。システム構成図&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/system-architecture.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。システム構成図&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;アプリは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React Native&lt;/code&gt;で開発して、iOS / Android両方使えるようにしました。メインのサーバにあるAPIサーバは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel(php)&lt;/code&gt;で開発して、情報を集めるクローリングサーバは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Django(python)&lt;/code&gt;で開発しました。&lt;/p&gt; &lt;p&gt;本当はクローリングサーバとAPIサーバを1つで開発しても全然大丈夫ですが、私が貧乏な開発なので、AWSとかGCPを維持する余力がなくて、安いホスティングサービスを使うことにしました。韓国の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dothome&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;heroku&lt;/code&gt;を使って安くサービスを維持するように構成しました。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/dothome_plan.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。Dothome,Herokuホスティング&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/dothome_plan.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。Dothome,Herokuホスティング&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;Dothomeはドメインを購入するとすると無制限ウェブホスティングを使えることができます。無制限ウェブホスティングは1日&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1G&lt;/code&gt;まで基本トラフィックが提供されて、そのあとはウェブサービスの速度が制限されることになります。現在1Gを超えたことがないので、どのぐらい遅くなるかテストはませんでしたが、写真、動画などをサービスしてないので、多く問題はなくサービスを維持するとこができると思いました。ユーザが増えて問題にナルト、500円ダスト無制限トラフィックを使えるので、これでいいかと思ってます。（このブログポストはDothomeとは無関係です。）&lt;/p&gt; &lt;p&gt;詳しい内容は下記のリンクを確認してください。（韓国語です）&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.dothome.co.kr/web/premium/index.php&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Dothome - 無制限ホスティング&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;問題はDothomeでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;のみサービスをしてます。それでシステムを考える時、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel&lt;/code&gt;を選択しました。また、SSHアクセスもできないので、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab&lt;/code&gt;などを使うことができないので、定期的作業するサーバが別に必要になりました。&lt;/p&gt; &lt;p&gt;Herokuは色んな言語をサーポートするクラウドサービスで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;無料&lt;/code&gt;で使うことができます。しかし、無料なので、性能の面で良くないことがあったので、DothomeをメインAPIサーバにして、Herokuサーバをクローリングサーバにしました。&lt;/p&gt; &lt;p&gt;Herokuは無料で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;550 free dyno hours&lt;/code&gt;を提供しております。dyno hoursで書いてますが結局使える時間を意味します。1日24時間を可動すると22日ほど使うことができます。それでは1ヶ月使うことができないです。しかし、クレジットカードを登録すると追加で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;450 dyno hours&lt;/code&gt;を貰えます。そしたら全部で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1000 dyno hours&lt;/code&gt;を使えます。24時間使っても41日使えることができます。つまり1ヶ月使うことができます。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/heroku_plan.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る. heroku free plan&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/heroku_plan.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る. heroku free plan&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;問題はこのように無料で使えますが、30分間何もしないと、スリップモードに入るので、起こす時は時間がかかります。それで、APIサーバでは良くないと思って、定期的作業をすることをしました。&lt;/p&gt; &lt;p&gt;Herokuの無料プランに関して詳しく内容は下記のリンクを参考してください。(このブログポストはHerokuとは無関係です。)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.heroku.com/free&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Heorku - 無料プラン&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;このように完成したシステム図は下記のようです。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/system-architecture-hosting.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。ホスティングシステム構成図&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/system-architecture-hosting.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る。ホスティングシステム構成図&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;React Nativeでアプリを開発して、Dothomeが提供するPHPサーバとMysqlをLaravel APIサーバで構成して、最後にはHerokuでDjangoを動かしてクローリングをしております。&lt;/p&gt; &lt;p&gt;今振り替えてみると、HerokuではDjangoまで環境を設定する必要はなかったなと思います。単純にクローリングだけしてるので、なまPythonでも良かったかなと思いますね。&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;db設計&quot;&gt;DB設計&lt;/h2&gt; &lt;p&gt;DBはDothomeではMysqlを提供するので、Mysqlを使えなきゃならないです。そして、MySQL Workbenchをつかて下記のようにDBを設計しました。&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/db_erd.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る. DB設計図&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/db_erd.jpg&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る. DB設計図&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;apiサーバー開発&quot;&gt;APIサーバー開発&lt;/h2&gt; &lt;p&gt;APIサーバ開発はLaravelで構成しました。今からPHPフレイムワークで一番良かったなと思えたので、Laravelを使えるようにしました。&lt;/p&gt; &lt;p&gt;単純にDBへある情報を取って送るだけなので開発はそんなに時間は掛からなかったです。&lt;/p&gt; &lt;p&gt;しかし、Dothomeでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;でデプロイをしなきゃなラナイし、Dothomeが提供するPHPバージョンとMysqlバージョンを考えなきゃならないです。最初からこれを考えなかったので、FTPでファイルをアップロードしてもサーバが起動できませんでした。あ。。。それと何年ぶりのFTPデプロイか。。。しかし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git-ftp&lt;/code&gt;と言うオープンソースがあったので、簡単にデプロイするようになりました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/git/git-ftp/&quot; target=&quot;_blank&quot;&gt;Git FTPを使ってデプロイする&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;今回のサービスではログイン機能があります。ログイン認証機能には&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JWT(Json Web Token)&lt;/code&gt;を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwtインストールや設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:会員登録&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:ログイン&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:ユーザ情報&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-refresh-token&quot; target=&quot;_blank&quot;&gt;jwt:トークン更新&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-logout&quot; target=&quot;_blank&quot;&gt;jwt:ログアウト&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;クローリングサーバ開発&quot;&gt;クローリングサーバ開発&lt;/h2&gt; &lt;p&gt;ウェブにある情報をそのままクローリングすることは法律的色々問題があるので、今回のサービスでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RSS(Rich Site Summary)&lt;/code&gt;を使ってクローリングサーバを構成しました。&lt;/p&gt; &lt;p&gt;RSS Feedも個人的に購読することを目的にするので、法律的に問題があるかもしれないですが、私のサービスでそんなにトラフィックを取ることもないし、単純にタイトルと、イメージ、本文の一部を見せて、クリックすると、リダイレクトではなく直接サイトをオープンしてるので、そんなに問題ではないと思いました。また、大きく問題になるそうなニュースより、個人のブログやスタトアップの記事を撮ってくるようにしました。（問題になるとやめるしか。。。）&lt;/p&gt; &lt;p&gt;ブログリストは個人的に集めたものと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awesome-devblog&lt;/code&gt;（韓国）のGitHubで持ってきました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/sarojaba/awesome-devblog&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/sarojaba/awesome-devblog&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;これ以外にも色んなリソースを使ってクローリングを進めております。&lt;/p&gt; &lt;h2 id=&quot;アプリ開発&quot;&gt;アプリ開発&lt;/h2&gt; &lt;p&gt;アプリはReact Nativeを使ってiOS、アンドロイドを開発/デプロイしました。アプリは単純にAPIを使って必要なデータを取得して、画面へ表示するものなので、そんなに難しい記述を使ってません。&lt;/p&gt; &lt;p&gt;アプリの基本構造はTypescriptとStyled componentsを使っております。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/root-import/&quot; target=&quot;_blank&quot;&gt;RN(React Native)でroot importする&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;アプリのアイコンとSplashイメージ適用はreact-native-makeと言うライブラリを使いました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-make/&quot; target=&quot;_blank&quot;&gt;React NativeでAppアイコン&amp;amp;Splashイメージを作る&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-splash-screen/&quot; target=&quot;_blank&quot;&gt;App Splashスクリン&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ナビゲーションはreact-navigation v5を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Navtive)でreact-navigation v5を使う: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation-v5/&quot; target=&quot;_blank&quot;&gt;react-navigation V5&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;そしてアプリの分析や広告にはreact-native-firebase v6を使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 インストール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-crashlytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;今回のアプリではバーナ広告ではなく、ネーティブ広告を使ってます。しかしreact-native-firebaseではネーティブ広告をサーポートしてません。ネーティブ広告を使うため今回のアプリではreact-native-admob-native-adsを使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-admob-native-ads/&quot; target=&quot;_blank&quot;&gt;react-nativeでNative Advanced広告を表示する&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;最後は、今回のアプリはビデオタブを持ってます、ビデオはYoutube動画を再生しております。これのためreact-native-youtubeと言うライブラリを使ってます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-youtube/&quot; target=&quot;_blank&quot;&gt;react-nativeでYoutubeを再生する&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;react-native-videoもやってみましたが、youtubeのダウンロードリンクを作る時、時間がかかることと制限(1つのIPでは6時間間に1回生成可能)などの問題があってreact-native-youtubeライブラリを使うことにしました。詳しい内容は上のリンクを確認してください。&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;開発中の問題&quot;&gt;開発中の問題&lt;/h2&gt; &lt;p&gt;このサービスは単純なので大きい問題はないと思いましたが、下記のような問題が発生しました。&lt;/p&gt; &lt;h3 id=&quot;dothomeホスティング&quot;&gt;Dothomeホスティング&lt;/h3&gt; &lt;p&gt;上記にも少し話しましたが、最初Laravelで開発したサーバがDothomeホスティングで動かない問題が発生しました。それでDothomeで動くPHPバージョンをローカルにインストールして、それに合うLaravelバージョンをインストールした後、再開発しました。&lt;/p&gt; &lt;p&gt;また、サーバへデプロイするためFTPを利用したことと、Laravelを起動するため&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt;を設定する必要がありました。&lt;/p&gt; &lt;h3 id=&quot;ビデオ再生&quot;&gt;ビデオ再生&lt;/h3&gt; &lt;p&gt;アプリで自動でビデオを再生するためreact-native-videoとreact-native-ytdlを使って開発しましたが、同じIPで何回もリンクを生成することで問題があって、アンドロイドではVideoコントローラを実現する時黒しました。&lt;/p&gt; &lt;p&gt;それでreact-native-videoを使うことをヤメって、react-native-youtubeを使うことにしました。react-native-youtubeもiOSでは特に問題がありませんでしたが、アンドロイドでは複数プレイアを同時に表示することができなくって、画面へ表示されたYoutubeの一番最初の動画のみでプレイアを生成して、再生できるようにしました。구성하였습니다.&lt;/p&gt; &lt;h3 id=&quot;reject&quot;&gt;Reject&lt;/h3&gt; &lt;p&gt;やはり、一番問題はiOSの審査でした。アプリのMVPは下記のようです。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;ブログリスト: APIを使ってブログポストリストを取得して見せる。&lt;/li&gt; &lt;li&gt;ブログの詳細: リストで詳しくみたいItemを選択すると、そのブログの詳細内容が見れる。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;この機能を実装してアプリを登録しましたが、単純にウェブの内容を集めて見せてるので、アプリでの意味がないこととネーティブの機能を使ってないのでウェブでサービスした方が良いって言われてRejectされました。これを超えるために下記の機能を追加しました。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;おすすめ(いいね)機能&lt;/li&gt; &lt;li&gt;共有&lt;/li&gt; &lt;li&gt;最新順/ピックアップ順&lt;/li&gt; &lt;li&gt;ブックマーク&lt;/li&gt; &lt;li&gt;作者ファロウ&lt;/li&gt; &lt;li&gt;Youtubeビデオ&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;上の機能を一つづつ開発をして、終わったら審査を投げって、どの機能が追加されたらOKになるか確認してみました。その結果Youtubeのビデオをアプリ内で見ることができるように機能を追加した後、この理由のRejectはもう出ませんでした。&lt;/p&gt; &lt;p&gt;その後はアプリでユーザがアップロードした情報を共有しておりますが、見たくない情報を隠す機能がないのでRejectされました。それで次の機能を追加しました。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;該当記事を隠す&lt;/li&gt; &lt;li&gt;該当作者の記事を隠す&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;それで審査を申請したら、無事にアップストアへ登録することができました。この後、Googleのプレイストアへデプロイしましたが、アンドロイドは特に問題なくデプロイされました。&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;開発期間&quot;&gt;開発期間&lt;/h2&gt; &lt;p&gt;全てのサービスを開発した期間は2ヶ月ほとかかりました。リーン（Lean）で開発してるので、正確にどのぐらい掛かったかはっきり言えませんが、ちょっと区分すると下記のようです。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;企画や調査: 1週間&lt;/li&gt; &lt;li&gt;デザイン: 1週間&lt;/li&gt; &lt;li&gt;アプリ開発: 1ヶ月&lt;/li&gt; &lt;li&gt;クローリングサーバ: 1ヶ月&lt;/li&gt; &lt;li&gt;APIサーバ: 1ヶ月&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;上の期間はあまり意味がないです。朝、昼、夜、週末など時間がある時開発したので、実際かかった時間とは関係ないです。またリーンスタイルで開発したので、正確な時間ではないです。&lt;/p&gt; &lt;p&gt;開発は5月からスタートして、6月末へリリースしました。&lt;/p&gt; &lt;h2 id=&quot;懐古&quot;&gt;懐古&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;今回のトーイプロジェクトは今まで作ったトーイプロジェクトで初めてサーバを使ったプロジェクです。&lt;/li&gt; &lt;li&gt;貧乏な開発者なので、どうすると安くサービスを提供することできるかを悩んだ。&lt;/li&gt; &lt;li&gt;やはり、作ってみないと、大変さがわからない。(このようなRejectもあるか)&lt;/li&gt; &lt;li&gt;開発は面白い。&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://apps.apple.com/app/clog/id1513780724&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る, ios ダウンロード&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.clog&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;Clog - 世界の全ての情報をまとめて見る, アンドロイドダウンロード&quot; /&gt; &lt;/a&gt; &lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/clog/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/clog/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">Rubyのメソッド</title><link href="https://dev-yakuza.github.io/ruby/method/" rel="alternate" type="text/html" title="Rubyのメソッド"/><published>2020-06-11T00:00:00+09:00</published><updated>2020-08-26T16:54:37+09:00</updated><id>https://dev-yakuza.github.io/ruby/method-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/ruby/method/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#定義する&quot;&gt;定義する&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#return&quot;&gt;return&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#括弧&quot;&gt;括弧&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#パラメーター&quot;&gt;パラメーター&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#パラメーターのdefault&quot;&gt;パラメーターのDefault&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ブロックパラメーター&quot;&gt;ブロックパラメーター&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#可変長パラメーター&quot;&gt;可変長パラメーター&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#undef-와-defined&quot;&gt;undef 와 defined&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#undef&quot;&gt;undef&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#defined&quot;&gt;defined&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;メソッド(Method)、他の言葉で関数はプログラムで処理する内容を先に定義して、必要な時読んで実行するために使います。今回のブログポストではRubyのメソッドを使う方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;定義する&quot;&gt;定義する&lt;/h2&gt; &lt;p&gt;Rubyでは下記のようにメソッドを定義します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;return&quot;&gt;return&lt;/h2&gt; &lt;p&gt;Rubyでは最後の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return&lt;/code&gt;を省略することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;最後の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return&lt;/code&gt;を省略する場合、最後に書いた値がreturnされます。&lt;/p&gt; &lt;h2 id=&quot;括弧&quot;&gt;括弧&lt;/h2&gt; &lt;p&gt;関数のパラメーターがない場合は下記のように括弧を省略することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Hello&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;パラメーター&quot;&gt;パラメーター&lt;/h2&gt; &lt;h3 id=&quot;パラメーターのdefault&quot;&gt;パラメーターのDefault&lt;/h3&gt; &lt;p&gt;下記のようにパラメーターのDefaultを設定することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ブロックパラメーター&quot;&gt;ブロックパラメーター&lt;/h3&gt; &lt;p&gt;パラメーターの前に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;を使うとパラメーターをブロック（処理のグループ）を渡すことができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Hello&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# World&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;パラメーターで渡して貰ったブロックを実行するためには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;call&lt;/code&gt;関数を使う必要があります。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Hello&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# World&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;可変長パラメーター&quot;&gt;可変長パラメーター&lt;/h3&gt; &lt;p&gt;長さが変化するパラメーターは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;を使って渡すことができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'------------'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ------------&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;undef-와-defined&quot;&gt;undef 와 defined&lt;/h2&gt; &lt;h3 id=&quot;undef&quot;&gt;undef&lt;/h3&gt; &lt;p&gt;Rubyでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;undef&lt;/code&gt;を使って定義したメソッドを消すことができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;undef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Hello&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Traceback (most recent call last):&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# temp.rb:9:in `&amp;lt;main&amp;gt;': undefined local variable or method `temp' for main:Object (NameError)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;defined&quot;&gt;defined&lt;/h3&gt; &lt;p&gt;上のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;undef&lt;/code&gt;でメソッドを消すことができますし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;defined&lt;/code&gt;を使ってメソッドが存在するかどうかを確認することもできます。를 사용하면 메소드가 존재하는지 여부를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;defined?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;undef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;defined?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# method&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;definedを使う場合、定義された式の種類を意味する文字列が表示されます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# super&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# method&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# yield&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# self&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# nil&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# assignment&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# local-variable&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# local-variable(in-block)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# global-bariable&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# instance-variable&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# constant&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# class variable&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# $&amp;amp;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# $`&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# $1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# $2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# expression&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでRubyでメソッドを定義して使う方法について見てみました。また、Rubyのユニークな文法も確認しました。今から皆さんもRubyのメソッドを使って必要な処理を定義して使ってみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/method/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/method/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">Rubyでループを使う方法</title><link href="https://dev-yakuza.github.io/ruby/loop/" rel="alternate" type="text/html" title="Rubyでループを使う方法"/><published>2020-06-03T00:00:00+09:00</published><updated>2020-08-25T17:27:18+09:00</updated><id>https://dev-yakuza.github.io/ruby/loop-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/ruby/loop/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ループ&quot;&gt;ループ&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#forループ&quot;&gt;Forループ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#whileループ&quot;&gt;Whileループ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#utilループ&quot;&gt;Utilループ&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ルークの制御&quot;&gt;ルークの制御&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#break制御文&quot;&gt;Break制御文&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#next制御文&quot;&gt;Next制御文&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#redo制御文&quot;&gt;Redo制御文&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#retry制御文&quot;&gt;Retry制御文&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;Rubyで反復的な動作を実行するため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;while&lt;/code&gt;そして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;until&lt;/code&gt;のループを使えます。今回のブログではRubyのループとループを制御する方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;ループ&quot;&gt;ループ&lt;/h2&gt; &lt;h3 id=&quot;forループ&quot;&gt;Forループ&lt;/h3&gt; &lt;p&gt;Forループは配列や範囲を使って反復的な動作を実行します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;要素&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;配列や範囲&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;反復的な動作&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のようにForループを使って反復な動作を実行します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上の例題から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;do&lt;/code&gt;は下記のように書略できます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;範囲演算子を使って下記のように使うこともできます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;範囲演算子については下記のブログを参考してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/ruby/range/&quot; target=&quot;_blank&quot;&gt;RubyのRange演算子&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;whileループ&quot;&gt;Whileループ&lt;/h3&gt; &lt;p&gt;Whileループは与えられた条件が成立する間(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;)、反復的な動作を実行します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;条件&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;反復的な動作&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のようにWhileループを使って反復的な動作を実行します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上の例題から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;do&lt;/code&gt;を下記のように省略することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;または下記のように使うこともできます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h3 id=&quot;utilループ&quot;&gt;Utilループ&lt;/h3&gt; &lt;p&gt;Untilループは与えれた条件が成立するまで(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;), 反復的な動作を実行します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;条件&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;反復的な動作&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;下記のようにUntilループを使って反復的な動作を実行することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;上の例題から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;do&lt;/code&gt;を下記のように省略することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ルークの制御&quot;&gt;ルークの制御&lt;/h2&gt; &lt;p&gt;For, While, Untilのループを制御するため&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;break&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;redo&lt;/code&gt;そして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;retry&lt;/code&gt;制御文を使えます。&lt;/p&gt; &lt;h3 id=&quot;break制御文&quot;&gt;Break制御文&lt;/h3&gt; &lt;p&gt;ループでBreakを使って強制的ループを止めることができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;whileループでは下記のように使えます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Untilループでは下記のように使えます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;next制御文&quot;&gt;Next制御文&lt;/h3&gt; &lt;p&gt;ループでNextを使って今実行されてる動作を止めて次の動作へ移動することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;whileループでは下記のように使えます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Untilループでは下記のように使えます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h3 id=&quot;redo制御文&quot;&gt;Redo制御文&lt;/h3&gt; &lt;p&gt;ループでRedoを使って現在実行中の動作を止めて、同じ条件で再実行することができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;redo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 10&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;whileループでは下記のように使えます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;redo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 10&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Untilループでは下記のように使えます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;redo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 10&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;retry制御文&quot;&gt;Retry制御文&lt;/h3&gt; &lt;p&gt;ループでエラーが発生した場合、Retry制御文を使ってループを最初から試すことができます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;This is an exception&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;retry&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ここで使った&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;begin...rescue...end&lt;/code&gt;は他のプログラミング言語で良く使ってる&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;try...catch&lt;/code&gt;文法で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;begin...rescue&lt;/code&gt;中でエラーが発生すると、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rescue...end&lt;/code&gt;中が実行されます。&lt;/p&gt; &lt;p&gt;今回の例題では&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;raise&lt;/code&gt;を使って強制的にエラーを発生させって、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;retry&lt;/code&gt;を使えるようにしました。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;Rubyで使えるループについて見てみました。また、ループの中でループを制御する方法についても見てみました。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;retry&lt;/code&gt;制御文が少し難しいでしたが、エラーが発生する時、ループを最初から実行させる重要な制御文なので覚えていきましょう。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/loop/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/loop/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">RubyのBEGIN, END</title><link href="https://dev-yakuza.github.io/ruby/begin-end-block/" rel="alternate" type="text/html" title="RubyのBEGIN, END"/><published>2020-05-29T00:00:00+09:00</published><updated>2020-08-24T16:02:08+09:00</updated><id>https://dev-yakuza.github.io/ruby/begin-end-block-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/ruby/begin-end-block/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#beginブロック&quot;&gt;BEGINブロック&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#endブロック&quot;&gt;ENDブロック&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;Rubyの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END&lt;/code&gt;について説明します。BEGINブロックはプログラムを開始する前実行する物を、ENDブロックはプログラムが終了する直前に実行する物を定義することができます。&lt;/p&gt; &lt;h2 id=&quot;beginブロック&quot;&gt;BEGINブロック&lt;/h2&gt; &lt;p&gt;BEGINブロックで定義したものは他の物より先に実行されます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# World&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Hello&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;複数のBEGINブロックを持ってる場合、宣言した順で実行されます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;BEGIN&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# World&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# BEGIN&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Hello&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;BEGINブロックはローカル変数の範囲を持ってるので、他のローカル変数と参照することができません。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Global Variable&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Local Variable&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# undefined local variable or method 'b' for main:Object (NameError)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;endブロック&quot;&gt;ENDブロック&lt;/h2&gt; &lt;p&gt;ENDブロックで定義した物は全ての物が実行された後、実行されます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ENDブロックが複数ある場合は、宣言の逆順で実行されます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;ENDブロックはBEGINとは違って、変数の範囲を共有します。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;Rubyで良く使われないものですが、ユニークな文法なので、覚えとくと良いかと思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/begin-end-block/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/begin-end-block/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">RubyのRange演算子</title><link href="https://dev-yakuza.github.io/ruby/range/" rel="alternate" type="text/html" title="RubyのRange演算子"/><published>2020-05-28T00:00:00+09:00</published><updated>2020-08-21T15:50:10+09:00</updated><id>https://dev-yakuza.github.io/ruby/range-ja</id><content type="html" xml:base="https://dev-yakuza.github.io/ruby/range/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#概要&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#range演算子の種類&quot;&gt;Range演算子の種類&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#range演算子の使い方&quot;&gt;Range演算子の使い方&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完了&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;RubyのRange演算子について調べてみようかと思います。Range演算子は順番決めてある整数、アルパベット英語文字などで昇順範囲を作ることができます。&lt;/p&gt; &lt;p&gt;RangeはRubyのユニークな文法なので、よく知っておけば、色んなところで活用できます。&lt;/p&gt; &lt;h2 id=&quot;range演算子の種類&quot;&gt;Range演算子の種類&lt;/h2&gt; &lt;p&gt;Range演算子には&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt;があります。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt;の違いは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt;は最後の要素が含まれてないことです。&lt;/p&gt; &lt;h2 id=&quot;range演算子の使い方&quot;&gt;Range演算子の使い方&lt;/h2&gt; &lt;p&gt;Range演算子は下記のように使えます。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1, 2, 3, 4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1, 2, 3&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# a, b, c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# a, b&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;Rubyは上のようにRange演算子というユニークな文法があります。Range演算子はループでよく使えるので覚えていきましょう。&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;low&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;medium&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;high&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# high&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/range/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/ruby/2020/range/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>