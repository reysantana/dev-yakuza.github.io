<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://dev-yakuza.github.io/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.github.io/ko/" rel="alternate" type="text/html"/><updated>2020-07-08T10:51:12+09:00</updated><id>https://dev-yakuza.github.io/feed.xml</id><title type="html">dev-yakuza</title><subtitle>『Programming Artist ヤクザ』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">React Native에서 Admob의 Native Advanced 광고 사용하기</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-admob-native-ads/" rel="alternate" type="text/html" title="React Native에서 Admob의 Native Advanced 광고 사용하기"/><published>2020-06-25T00:00:00+09:00</published><updated>2020-06-24T11:32:23+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-admob-native-ads-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-admob-native-ads/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#목차&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-admob-native-ads-설치&quot;&gt;react-native-admob-native-ads 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-admob-native-ads-설정&quot;&gt;react-native-admob-native-ads 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-admob-native-ads-사용법&quot;&gt;react-native-admob-native-ads 사용법&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#다른-컴포넌트&quot;&gt;다른 컴포넌트&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;React Native를 사용하여 앱을 개발할 때, Admob의 Banner 광고 위주로 사용했었습니다. Admob의 Banner 광고는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;의 V6를 사용하여 구현하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;하지만, 토이프로젝트를 진행하면서 Admob의 Native Advanced 광고를 사용할 필요가 생겼습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/clog/development-journal/&quot; target=&quot;_blank&quot;&gt;「Clog」 서비스 개발기(React Native, Laravel, Django)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;불행이도 react-native-firebase에서는 Native Advanced 광고를 지원하지 않습니다. 자세한 내용은 아래에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://invertase.canny.io/react-native-firebase/p/new-native-ad-format&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;New Native Ad Format&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 React Native에서 Admob의 Native Advanced 광고를 사용하기 위해, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-admob-native-ads&lt;/code&gt; 라이브러리를 사용하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-admob-native-ads&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;react-native-admob-native-ads-설치&quot;&gt;react-native-admob-native-ads 설치&lt;/h2&gt; &lt;p&gt;아래에 명령어를 사용하여 react-native-admob-native-ads를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-admob-native-ads &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;react-native-admob-native-ads-설정&quot;&gt;react-native-admob-native-ads 설정&lt;/h2&gt; &lt;p&gt;react-native-admob-native-ads를 사용하여 Native Advanced 광고를 표시하기 위해서는 아래와 같은 절차를 진행해야 합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#ios-setup&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;iOS Setup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#android-setup&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Android Setup&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;하지만 저는 이미 react-native-firebase를 사용하고 있었기 때문에, 위에 설정을 진행하지 않았습니다. react-native-firebase를 통해 Admob을 설정하는 방법에 대해서는 아래에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;react-native-admob-native-ads-사용법&quot;&gt;react-native-admob-native-ads 사용법&lt;/h2&gt; &lt;p&gt;공식 문서에 상세하게 사용하는 방법이 나와있습니다. 아래에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#basic-usage-example&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Basic Usage Example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래 소스코드는 react-native-admob-native-ads를 사용하여 Native Advanced 광고를 표시하기 위해, 제가 앱에서 사용하는 소스코드입니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Platform&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;styled-components/native&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NativeAdView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IconView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HeadlineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TaglineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MediaView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-admob-native-ads&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FastImage&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-fast-image&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;~/ENV&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` background-color: #FFFFFF; margin-bottom: 12px; height: 330px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdsContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NativeAdView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdsContents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` background-color: #FFFFFF; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` padding: 16px 8px 8px 16px; flex-direction: row; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IconView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 32px; height: 32px; border-radius: 32px; background-color: #EEEEEE; border-width: 1px; border-color: #EEEEEE; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserInfoContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` flex: 1; margin-horizontal: 8px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HeadlineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; font-weight: 600; color: #2A365D; width: 100%; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PublishedDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; font-weight: 300; color: #2A365D; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertisementImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MediaView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 100%; height: 209px; background-color: #FFFFFF; border-top-width: 1px; border-bottom-width: 1px; border-color: #EEEEEE; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` height: 64px justify-content: center; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AdvertiserDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TaglineView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` color: #2A365D; font-size: 16px; line-height: 22px; font-weight: 400; padding: 4px 8px 16px 8px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AuthorImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FastImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 32px; height: 32px; border-radius: 32px; background-color: #EEEEEE; border-width: 1px; border-color: #EEEEEE; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AuthorName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; width: 100%; background-color: #ECEFF1; width: 80px; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PublishedDatePlaceholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` font-size: 12px; font-weight: 300; width: 100px; background-color: #ECEFF1; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MainImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 100%; height: 209px; background-color: #CFD8DC; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PostDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` background-color: #ECEFF1; font-size: 16px; line-height: 22px; font-weight: 400; margin: 4px 8px 16px 8px; width: 80%; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TEST_NATIVE_AD_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;YOUR IOS NATIVE ADVANCE ID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;YOUR ANDROID NATIVE ADVANCE ID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NativeBanner&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NodeJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;NativeBanner failed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdLoaded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Ad has loaded&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancelTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showDelay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__DEV__&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TEST_NATIVE_AD_ID&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeAdsId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdsContainer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdLoaded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onAdLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enableTestMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__DEV__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;delayAdLoading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showDelay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdsContents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AuthorImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;~/Assets/Images/author.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserInfoContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserName&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt; : &amp;lt;AuthorName /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PublishedDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Sponsor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/PublishedDate&amp;gt; : &amp;lt;PublishedDatePlaceholder /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/AdvertiserInfoContainer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Header&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertisementImage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resizeMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MainImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoaded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AdvertiserDescription&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt; : &amp;lt;PostDescription /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Content&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/AdsContents&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/AdsContainer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Container&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentDidCatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[NativeBanner] ERROR: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancelTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancelTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NativeBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;다른-컴포넌트&quot;&gt;다른 컴포넌트&lt;/h2&gt; &lt;p&gt;Admob의 Native Advanced 광고는 자신의 디자인에 맞춰 자유롭게 변경할 수 있는 장점이 있습니다. 아래 링크를 통해, 사용 가능한 컴포넌트들을 확인하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/ammarahm-ed/react-native-admob-native-ads#-reference&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-admob-native-ads reference&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 React Native에서 Admob의 Native Advanced 광고를 표시하는 방법에 대해서 알아보았습니다. 이제 좀 더 자유롭게 광고를 디자인해서, 사용자의 UX를 해치지 않는 광고를 제공해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-admob-native-ads/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-admob-native-ads/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">Git FTP를 사용하여 파일 업로드하기</title><link href="https://dev-yakuza.github.io/ko/git/git-ftp/" rel="alternate" type="text/html" title="Git FTP를 사용하여 파일 업로드하기"/><published>2020-06-24T00:00:00+09:00</published><updated>2020-06-24T08:58:52+09:00</updated><id>https://dev-yakuza.github.io/git/git-ftp-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/git/git-ftp/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#목차&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#git-ftp-설치&quot;&gt;Git FTP 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#사용법&quot;&gt;사용법&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#setup&quot;&gt;Setup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#init&quot;&gt;Init&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#catchup&quot;&gt;Catchup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#push&quot;&gt;Push&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;토이 프로젝트를 진행하면서, FTP를 이용하여 파일을 서버에 업로드하여 배포할 필요가 생겼습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/clog/development-journal/&quot; target=&quot;_blank&quot;&gt;「Clog」 서비스 개발기(React Native, Laravel, Django)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이처럼 Git로 관리하는 파일을 FTP를 통해 배포할 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git FTP&lt;/code&gt;를 사용하면, 편리하게 배포할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/git-ftp/git-ftp&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Git FTP&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;git-ftp-설치&quot;&gt;Git FTP 설치&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;macOS&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래에 명령어를 사용하여 Git FTP를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;brotli brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git-ftp &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Others&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;다른 OS를 사용하시는 분들은 아래에 링크를 참고하여 설치하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/git-ftp/git-ftp/blob/master/INSTALL.md&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Git FTP Installation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;사용법&quot;&gt;사용법&lt;/h2&gt; &lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt; &lt;p&gt;Git FTP를 사용하기 위해서는 아래에 명령어로, FTP를 설정할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config git-ftp.url &lt;span class=&quot;s2&quot;&gt;&quot;ftp://example.com/ftp/server/address&quot;&lt;/span&gt; git config git-ftp.user &lt;span class=&quot;s2&quot;&gt;&quot;user-id&quot;&lt;/span&gt; git config git-ftp.password &lt;span class=&quot;s2&quot;&gt;&quot;user-password&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;init&quot;&gt;Init&lt;/h3&gt; &lt;p&gt;서버에 아직 아무 파일이 업로드되어 있지 않은 상태라면, 아래에 명령어를 통해 초기화 및 모든 파일을 업로드합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git ftp init &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;catchup&quot;&gt;Catchup&lt;/h3&gt; &lt;p&gt;이미 FTP를 통해 파일을 업로드한 상태라면, 아래에 명령어를 통해 업로드된 파일을 동기화합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git ftp catchup &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;push&quot;&gt;Push&lt;/h3&gt; &lt;p&gt;이제 모든 설정이 끝났습니다. 개발을 위해 파일을 수정한 후, 보통 아래에 명령어로 Git을 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Modfiy some source codes&lt;/span&gt; git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Fix some bugs'&lt;/span&gt; git push origin master &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 실행한 후, 이제 FTP를 통해 파일을 업로드하기 위해서, 아래에 명령어를 사용합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git ftp push &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 Git FTP에 대한 사용 방법을 알아보았습니다. 요즘은 보통 FTP로 파일을 업로드하지 않기 때문에, 별로 도움이 되지 않을 거 같지만, 저처럼 특정한 상황에서는 상단히 유용하게 사용할 수 있을거 같습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/git/2020/git-ftp/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/git/2020/git-ftp/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">React Native에서 Youtube 재생하기</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-youtube/" rel="alternate" type="text/html" title="React Native에서 Youtube 재생하기"/><published>2020-06-23T00:00:00+09:00</published><updated>2020-06-27T13:52:07+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-youtube-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-youtube/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#목차&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-youtube-설치-및-준비&quot;&gt;react-native-youtube 설치 및 준비&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-native-youtube-사용법&quot;&gt;react-native-youtube 사용법&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#비디오-재생&quot;&gt;비디오 재생&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#flatlist에서-사용하기&quot;&gt;FlatList에서 사용하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;React Native로 토이프로젝트를 진행하면서 Youtube 비디오를 재생할 필요가 생겼습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/clog/development-journal/&quot; target=&quot;_blank&quot;&gt;「Clog」 서비스 개발기(React Native, Laravel, Django)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 React Native 프로젝트에서 Youtube 비디오를 재생하기 위해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-youtube&lt;/code&gt; 라이브러리를 사용하는 방법에 대해서 설명합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/davidohayon669/react-native-youtube&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-youtube&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;여기서 사용 소개하는 예제는 GitHub 저장소에서도 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/react-native-youtube-example&quot; target=&quot;_blank&quot;&gt;React Native Youtube Example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;react-native-youtube-설치-및-준비&quot;&gt;react-native-youtube 설치 및 준비&lt;/h2&gt; &lt;p&gt;아래에 명령어를 사용하여 react-native-youtube를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; react-native-youtube &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;iOS에서 사용하기 위해서는 아래에 명령어를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ios pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;안드로이드에서 react-native-youtube를 사용하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Youtube developer API key&lt;/code&gt;가 필요합니다. 아래에 링크를 통해 Youtube developer API key를 생성하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://developers.google.com/youtube/android/player/register&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Youtube Developer API Key for Android&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;react-native-youtube-사용법&quot;&gt;react-native-youtube 사용법&lt;/h2&gt; &lt;h3 id=&quot;비디오-재생&quot;&gt;비디오 재생&lt;/h3&gt; &lt;p&gt;react-native-youtube를 사용하여 React Native에서 Youtube를 재생하기 위해서 아래와 같이 소스 코드를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-youtube&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SafeAreaView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;videoId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;KVZ-P-ZI6W4&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YOUR_YOUTUBE_DEVELOPER_API_KEY_FOR_ANDROID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeState:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeQuality&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeQuality: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onError: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/SafeAreaView&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;flatlist에서-사용하기&quot;&gt;FlatList에서 사용하기&lt;/h3&gt; &lt;p&gt;안드로이드에서는 react-native-youtube를 사용하여 여러 Youtube를 한 화면에서 재생할 수 없습니다. 자세한 내용은 아래에 링크를 확인하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/davidohayon669/react-native-youtube#multiple-youtube--instances-on-android&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Multiple Youtube instance on Android&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;따라서 안드로이드에서 FlatList를 사용하여 여러 비디오를 표시하고, 자동 재생하기 위해서는 FlatList의&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewabilityConfig&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onViewableItemsChanged&lt;/code&gt;를 조합하여 구현할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native-youtube&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ActivityIndicator&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;large&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListVideo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewAreaCoveragePercentThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VIDEO_LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewabilityConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewableItemsChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyExtractor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;renderItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visablePostIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;videoId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YOUR_YOUTUBE_DEVELOPER_API_KEY_FOR_ANDROID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeState:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeQuality&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeQuality: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onError: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;p&gt;위에 소스를 좀 더 자세히 살펴보면,&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewAreaCoveragePercentThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewabilityConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewConfigRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 화면에 표시된 아이템이 어느정도 보이면, 화면에 표시되었다고 판단할 수 있도록 기준을 작성합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setVisablePostIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onViewableItemsChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onViewRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 화면에 표시된 아이템이 변경되면 호출되는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onViewableItemsChanged&lt;/code&gt;을 통해 현재 표시된 여러 아이템중 첫번째 아이템의 Index를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useState&lt;/code&gt;를 통해 저장합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlatList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;renderItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visablePostIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;YouTube&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;videoId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YOUR_YOUTUBE_DEVELOPER_API_KEY_FOR_ANDROID&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullscreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onReady&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeState:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChangeQuality&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onChangeQuality: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;onError: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 저장한 Index를 비교하셔 첫번째 아이템의 비디오만을 재생하도록 설정할 수 있습니다. 이렇게 하면, 안드로이드에서도 여러 비디오를 자동 재생할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 React Native에서 Youtube를 재생하는 방법에 대해서 알아보았습니다. 여기서 소개한 소스코드는 GitHub에서 확인이 가능하니, 전체 소스를 보고 참고하시면 좋을거 같습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/react-native-youtube-example&quot; target=&quot;_blank&quot;&gt;React Native Youtube Example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-youtube/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-youtube/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">「Clog」 서비스 개발기(React Native, Laravel, Django)</title><link href="https://dev-yakuza.github.io/ko/clog/development-journal/" rel="alternate" type="text/html" title="「Clog」 서비스 개발기(React Native, Laravel, Django)"/><published>2020-06-22T00:00:00+09:00</published><updated>2020-06-27T13:52:07+09:00</updated><id>https://dev-yakuza.github.io/clog/development-journal-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/clog/development-journal/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#목차&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#clog란&quot;&gt;Clog란&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#왜-만들게-되었나&quot;&gt;왜 만들게 되었나&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#서비스-기획&quot;&gt;서비스 기획&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#디자인&quot;&gt;디자인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#시스템-구성&quot;&gt;시스템 구성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#db-설계&quot;&gt;DB 설계&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#api-서버-개발&quot;&gt;API 서버 개발&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#크롤링-서버-개발&quot;&gt;크롤링 서버 개발&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#앱-개발&quot;&gt;앱 개발&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#개발중-문제&quot;&gt;개발중 문제&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#닷홈-호스팅&quot;&gt;닷홈 호스팅&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#비디오-재생&quot;&gt;비디오 재생&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#리젝&quot;&gt;리젝&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#개발-기간&quot;&gt;개발 기간&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#회고&quot;&gt;회고&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;벌써 16번째 토이 프로젝트네요. 아래 링크를 통해 지금까지 제가 개발한 토이프로젝트를 확인할 수 있습니다. 궁금하신 분들은 아래 링크를 통해 확인해 보세요.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/app/list/ko/&quot; target=&quot;_blank&quot;&gt;JeongHean’s App List&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;토이프로젝트를 개발하면서 작성한 개발기도 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/blaboo/development-journal/&quot; target=&quot;_blank&quot;&gt;BlaBoo 앱 개발기(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/kumoncho/development-journal/&quot; target=&quot;_blank&quot;&gt;Kumoncho 앱 개발기(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/ildangongbu/development-journal/&quot; target=&quot;_blank&quot;&gt;일단공부 앱 개발기(RN, React Native)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;저는 주로 페이스북 그룹을 통해 개발, 스타트업, 자기 개발 등의 정보를 얻고 있습니다. 하지만, 페이스북이 이런 정보 공유를 위해 탄생한 플랫폼이 아니므로, 불필요한 정보들도 많이 가지고 있습니다.&lt;/p&gt; &lt;p&gt;그래서 꼭 제게 필요한 정보만을 모아볼 수 있는 앱이 있으면 좋겠다고 생각해서 이번 서비스을 기획 및 제작하게 되었습니다.&lt;/p&gt; &lt;h2 id=&quot;clog란&quot;&gt;Clog란&lt;/h2&gt; &lt;p&gt;Clog는 개발, 스타트업, 자기 개발 등 유용한 정보를 얻기 위해 블로그, 검색, 페이스북 등을 통해 얻던 방식을 개선하기 위해, 한 곳에서 모든 정보를 모아보는 서비스입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Clog 소개 페이지: &lt;a href=&quot;https://dev-yakuza.github.io/app/clog/&quot; target=&quot;_blank&quot;&gt;Clog - 세상의 모든 정보를 모아보다&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;아래는 앱을 다운로드 받을 수 있는 링크입니다.&lt;/p&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://apps.apple.com/app/clog/id1513780724&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다, ios 다운로드&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.clog&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다, 안드로이드 다운로드&quot; /&gt; &lt;/a&gt; &lt;/div&gt; &lt;h2 id=&quot;왜-만들게-되었나&quot;&gt;왜 만들게 되었나&lt;/h2&gt; &lt;p&gt;개요에서도 잠깐 이야기 했지만, 저는 개발/스타트업/자기 개발 등의 정보를 페이스북 그룹을 통해서 얻고 있습니다. 또한 브런치나 GitHub, tstory 등과 같은 개인 블로그도 검색을 통해서 찾아보곤 합니다.&lt;/p&gt; &lt;p&gt;이렇게 필요한 정보를 얻기 위해서, 페이스북을 확인하거나 좋은 블로그들을 찾아 보는게 어렵고, 이런 방식은 원하는 정보만을 골라 볼 수가 없는 단점이 있었습니다.&lt;/p&gt; &lt;p&gt;그래서 개발/스타트업/자기 개발 등과 같은 정보를 한 곳에서 모아볼 수 있는 서비스를 제작하면 도움이 되지 않을까 싶어서 이번 서비스를 제작하게 되었습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/background.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/background.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;서비스-기획&quot;&gt;서비스 기획&lt;/h2&gt; &lt;p&gt;일단 네이밍은 Clog의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt;log의 다음 버전을 의미하기 하고 있습니다. 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;가 영어의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;See&lt;/code&gt;와 발음이 유사한 점도 고려하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;See log&lt;/code&gt;, 즉 기록을 보다라는 의미도 함축하도록 하였습니다.&lt;/p&gt; &lt;p&gt;Clog의 MVP(Minimum Viable Product: 최소 기능 제품)는 아래와 같이 정의했습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;정보 수집: 개발/스타트업/자기 개발 등과 관련 된 정보, 특히 블로그를 모은다.&lt;/li&gt; &lt;li&gt;정보 제공 API: 위에서 모은 정보를 API로 공급한다.&lt;/li&gt; &lt;li&gt;블로그 리스트: API를 통해 블로그 포스트 리스트들을 받아오고 이를 보여준다.&lt;/li&gt; &lt;li&gt;블로그 상세: 리스트에서 자세히 보고자 하는 아이템을 선택하면, 해당 블로그에 대한 상세 내용이 보인다.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;다른 앱들을 제작할 때보다, MVP가 매우 간단했었습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;글들을 모으고, 글들을 보여준다.&lt;/code&gt;에 집중하였습니다.&lt;/p&gt; &lt;h2 id=&quot;디자인&quot;&gt;디자인&lt;/h2&gt; &lt;p&gt;저는 디자인은 제 영역이 아니라고 생각하고 살아온 개발자입니다. 그래서 디자인이 제일 어렵습니다. 작은 회사에서 프론트엔드 개발할 때, 왠만한 문제는 개발자들이 UI/UX도 하기 때문에, 툴을 다루는 것에 대한 불편함은 없지만, 문제를 해결하는 개발과는 다른 디자인은 센스에 영역이기 때문에 큰 어려움을 느끼고 있습니다.&lt;/p&gt; &lt;p&gt;그래도 토이프로젝트를 진행하면서 고민하고, 실패하면서 점점 좋아지고 있는게 아닌가 싶습니다. 역시 연습이 제일 중요한거 같네요.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/logo.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 로고 디자인&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/logo.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 로고 디자인&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;로고는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;See log&lt;/code&gt;에서 아이디어를 떠올렸습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;보다&lt;/code&gt;라는 의미를 강조하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;를 사람의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;눈&lt;/code&gt; 모양으로 디자인 해 보았습니다. 또한, 큰 로고에는 눈을 뜨고 log를 바라보는 이미지로써, 눈썹 이미지를 추가했으며 눈동자가 log쪽에 좀 더 가깝도록 디자인 해 보았습니다.&lt;/p&gt; &lt;p&gt;메인 색상은 신뢰와 안정감을 줄 수 있는 파랑색 계열로 했으며, 좀 더 신선함을 주기 위해, 밝게 톤을 올렸습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/all_design.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 로고 디자인&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/all_design.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 로고 디자인&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱의 전체 디자인은, 처음엔 1~2 페이지만 디자인을 했는데, 개발하다가 점점 필요한 기능들이 많아지면서 위와 같이 디자인이 많아지게 되었습니다. 전체적인 디자인은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sketchapp&lt;/code&gt;으로 제작했습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;시스템-구성&quot;&gt;시스템 구성&lt;/h2&gt; &lt;p&gt;Clog는 다음과 같은 시스템으로 구성되어 있습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/system-architecture.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 시스템 구성도&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/system-architecture.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 시스템 구성도&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;앱은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React Native&lt;/code&gt;로 개발하여, iOS / Android에서 모두 사용하게 만들었습니다. 주 서버가 될 API 서버는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel(php)&lt;/code&gt;로 구성하였으며, 정보를 모으는 크롤링 서버는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Django(python)&lt;/code&gt;으로 구성하였습니다.&lt;/p&gt; &lt;p&gt;사실 크롤링 서버와 API 서버를 따로 분리할 필요없이 하나에 서버에서 사용해도 됩니다. 하지만, 제가 가난한 개발자이다 보니, AWS나 GCP를 유지할 여력이 되지 않아, 저렴한 호스팅 서비스에 눈을 돌렸고, 국내 호스팅인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;닷홈&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;heroku&lt;/code&gt;를 조합하면 저렴하게 서비스를 유지할 수 있을 거 같다는 생각이 들었습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/dothome_plan.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 닷홈 호스팅&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/dothome_plan.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 닷홈 호스팅&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;닷홈은 도메인을 구입하면 무제한 웹 호스팅을 사용할 수 있습니다. 무제한 웹 호스팅은 하루 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1G&lt;/code&gt;까지 기본 트래픽이 제공되고, 그 이후에는 웹 서비스가 속도가 제한된다고 합니다. 현재까지 1G를 초과해본 적이 없어 얼마나 느려지는지 테스트 해보지 못했지만, 사진, 동영상 등을 서비스하고 있지 않기 때문에 큰 문제없이 서비스를 유지할 수 있을거라고 판단하였습니다. 사용자가 많아 문제가 되면, 5000원을 내고 무제한 트래픽을 사용하면 되지 않을까 싶습니다. (이 블로그 포스트는 닷홈과는 무관함을 알려드립니다.)&lt;/p&gt; &lt;p&gt;자세한 내용은 아래에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.dothome.co.kr/web/premium/index.php&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;닷홈 - 무제한 웹호스팅&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;문제는 닷홈이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;만을 서비스하고 있습니다. 그래서 시스템을 구성할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel&lt;/code&gt;을 선택하였습니다. 또한, ssh 접근도 불가능하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab&lt;/code&gt; 등을 사용할 수 없으므로, 정기적으로 작업하는 서버가 별도로 필요하게 되었습니다.&lt;/p&gt; &lt;p&gt;Heroku는 다양한 언어를 지원하는 클라우드 서비스로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;무료&lt;/code&gt;로 사용이 가능합니다. 하지만, 무료이다보니 성능적인 면에서 좀 떨어지는 면이 있어서, 닷홈을 메인 API 서버로 두고, Heroku 서버를 크롤링을 전담하는 서버로 만들었습니다.&lt;/p&gt; &lt;p&gt;Heroku는 무료로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;550 free dyno hours&lt;/code&gt;를 제공합니다. dyno hours라고 표시했는데 결국, 사용 가능한 가용 시간을 의미합니다. 하루 24시간을 가동하면 22일 정도 사용할 수 있습니다. 그럼 30일 한달 동안을 사용하지 못하는 문제가 있습니다. 하지만 불행중 다행으로, 신용 카드를 등록하면 추가로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;450 dyno hours&lt;/code&gt;를 추가로 제공하고 있어, 도합 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1000 dyno hours&lt;/code&gt;를 사용할 수 있습니다. 그럼 24시간을 가동해도 41일이 되므로, 한달 내내 무료로 사용할 수 있게 됩니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/heroku_plan.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. heroku free plan&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/heroku_plan.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. heroku free plan&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;문제는 이렇게 무료로 사용할 수 있지만, 30분간 아무것도 하지 않으면, 슬립 모드로 들어가고, 다시 깨우면 시간이 걸리게 됩니다. 그래서, API 서버로는 적당하지 않다고 판단하고, 정기적인 작업을 돌려서 서버를 계속 사용하도록 구성하였습니다.&lt;/p&gt; &lt;p&gt;Heroku의 무료 요금제에 관한 자세한 사항은 아래에 링크를 참고하시기 바랍니다. (이 블로그 포스트는 Heroku와 어떤 관련도 없음을 알려드립니다.)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.heroku.com/free&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Heorku - 무료 플랜&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이렇게 해서 완성된 시스템 구성이 아래와 같습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/system-architecture-hosting.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 호스팅 시스템 구성도&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/system-architecture-hosting.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. 호스팅 시스템 구성도&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;React Native로 앱을 개발하고, 닷홈에서 제공하는 php 서버와 mysql을 Laravel API 서버로 구성하고, 마지막으로 Heroku에 Django를 올리고 정기적인 크롤링 작업을 하도록 하였습니다.&lt;/p&gt; &lt;p&gt;다시 되돌아 보면 Heroku에는 django까지 올릴 필요는 없었던거 같습니다. 단순히 크롤링만 하므로 순수 Python으로도 충분했다고 생각이 드네요.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;db-설계&quot;&gt;DB 설계&lt;/h2&gt; &lt;p&gt;DB는 닷홈에서 Mysql을 제공하므로, Mysql을 사용해야 했습니다. 그리고 MySQL Workbench를 사용하여 아래와 같이 DB를 설계하였습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/clog/development-journal/db_erd.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. DB 설계도&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/clog/development-journal/db_erd.jpg&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다. DB 설계도&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;api-서버-개발&quot;&gt;API 서버 개발&lt;/h2&gt; &lt;p&gt;API 서버 개발은 Laravel로 구성하였습니다. 지금까지 써본 PHP 프레임워크중에는 라라벨이 가장 좋았던거 같아서, Laravel을 사용하게 되었습니다.&lt;/p&gt; &lt;p&gt;단순히, DB에 있는 정보를 가져와 전달하는 서버여서 개발하는 시간은 그리 오래 걸리지 않았습니다.&lt;/p&gt; &lt;p&gt;다만, 닷홈에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;로 배포를 해야하고, 닷홈에서 제공하는 PHP 버전과 Mysql 버전을 고려해야 했습니다. 처음에 개발할 때는, 이걸 고려하지 않아, 아무리 FTP로 올려도 제대로 동작하지 않았습니다. 아, 그리고 얼마만에 해보는 FTP 배포인가…다행이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git-ftp&lt;/code&gt;라는 오픈 소스가 있어서, 좀 수월하게 배포할 수 있게 되었습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/git/git-ftp/&quot; target=&quot;_blank&quot;&gt;Git FTP를 사용하여 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 서비스에는 로그인 기능이 있습니다. 로그인 인증 기능에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JWT(Json Web Token)&lt;/code&gt;을 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt/&quot; target=&quot;_blank&quot;&gt;jwt 설치 및 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signup&quot; target=&quot;_blank&quot;&gt;jwt:회원가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-signin&quot; target=&quot;_blank&quot;&gt;jwt:로그인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-user-info&quot; target=&quot;_blank&quot;&gt;jwt:사용자 정보&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-refresh-token&quot; target=&quot;_blank&quot;&gt;jwt:토큰 갱신&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/laravel/jwt-logout&quot; target=&quot;_blank&quot;&gt;jwt:로그아웃&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;크롤링-서버-개발&quot;&gt;크롤링 서버 개발&lt;/h2&gt; &lt;p&gt;웹에 있는 정보를 그대로 크롤링하는 것은 많은 법적 문제를 일으킬 수 있기 때문에, 이번 서비스에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RSS(Rich Site Summary)&lt;/code&gt;를 사용한 크롤링 서버를 구성하였습니다.&lt;/p&gt; &lt;p&gt;RSS 피드도 개인적으로 구독하는 것을 목적으로 두기 때문에 법적인 문제가 될 수 있습니다. 하지만, 제 서비스가 네이버나 다음처럼 굉장히 많은 트래픽을 잡아 먹는 서비스도 아니고, 단순 제목, 이미지, 본문 일부를 보여주고, 클릭하면, 리다이렉트가 아닌 직접 사이트를 오픈하기 때문에 큰 문제가 없을 거라고 판단하였습니다. 또한 큰 문제가 될만한, 메이저 뉴스보다는 개인들의 블로그나 스타트업의 기사를 가져오도록 구성하였습니다.&lt;/p&gt; &lt;p&gt;블로그 리스트는 개인적으로 수집한 내용 일부와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awesome-devblog&lt;/code&gt;의 GitHub에서 가져왔습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/sarojaba/awesome-devblog&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/sarojaba/awesome-devblog&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이외에도 여러 리소스들을 활용하여, 크롤링을 진행하고 있습니다.&lt;/p&gt; &lt;h2 id=&quot;앱-개발&quot;&gt;앱 개발&lt;/h2&gt; &lt;p&gt;앱은 React Native를 통해 iOS, 안드로이드를 개발/배포하였습니다. 앱은 단순히 API를 통해 필요한 데이터를 얻고, 화면에 표시하므로 그렇게 어려운 기술을 사용하고 있지 않습니다.&lt;/p&gt; &lt;p&gt;앱의 기본 구조는 Typescript와 Styled components를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/typescript/&quot; target=&quot;_blank&quot;&gt;typescript&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/styled-components/&quot; target=&quot;_blank&quot;&gt;styled-components&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/root-import/&quot; target=&quot;_blank&quot;&gt;RN(React Native)에서 root import하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;앱 아이콘과 Splash 이미지 적용은 react-native-make라는 라이브러리를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-make/&quot; target=&quot;_blank&quot;&gt;React Native에서 App 아이콘 &amp;amp; Splash 이미지 만들기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-splash-screen/&quot; target=&quot;_blank&quot;&gt;App Splash 스크린&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;내비게이션에는 react-navigation v5를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RN(React Navtive)에서 react-navigation v5 사용하기: &lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-navigation-v5/&quot; target=&quot;_blank&quot;&gt;react-navigation V5&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그리고 앱 분석 및 광고에는 react-native-firebase v6를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-crashlytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 앱에서는 배너 광고 대신, 네이티브 광고를 사용하고 있습니다. 하지만, react-native-firebase에서는 네이티브 광고를 지원하지 않고 있습니다. 네이티브 광고를 사용하기 위해서 이번 앱에서는 react-native-admob-native-ads를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-admob-native-ads/&quot; target=&quot;_blank&quot;&gt;react-native에서 네이티브 광고 사용하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;마지막으로 이번 앱은 비디오 탭을 가지고 있는데, 비디오는 유튜브 동영상을 재생하고 있고, 이를 위해서 react-native-youtube 라는 라이브러리를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-youtube/&quot; target=&quot;_blank&quot;&gt;react-native에서 Youtube 재생하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;react-native-video도 시도했지만, youtube의 다운로드 링크를 만들 떄, 걸리는 시간과, 제한(한 IP에서 6시간 동안 한 번만 생성 가능)등에 문제가 있어, react-native-youtube 라이브러리를 사용하게 되었습니다. 자세한 내용은 위에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;개발중-문제&quot;&gt;개발중 문제&lt;/h2&gt; &lt;p&gt;이번 서비스는 단순해서 큰 문제없이 진행되리라고 생각했지만, 아래와 같이 몇가지 문제가 발생하였습니다.&lt;/p&gt; &lt;h3 id=&quot;닷홈-호스팅&quot;&gt;닷홈 호스팅&lt;/h3&gt; &lt;p&gt;위에서도 잠깐 이야기했지만, 처음 Laravel로 개발한 서버가 닷홈 호스팅에서 돌아가지 않는 문제가 발생하였습니다. 그래서 닷홈에서 구동 가능한 php 버전을 로컬에 설치하고, 그에 맞는 Laravel 버전을 설치한 후 다시 개발하게 되었습니다.&lt;/p&gt; &lt;p&gt;또한, 서버에 배포하기 위해서 FTP를 이용해야 했고, Laravel을 구동시키기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt;을 사용해야 했습니다.&lt;/p&gt; &lt;h3 id=&quot;비디오-재생&quot;&gt;비디오 재생&lt;/h3&gt; &lt;p&gt;앱에서 자연스럽게 비디오를 재생하기 위해 react-native-video와 react-native-ytdl을 사용하여 구성하였지만, 같은 IP에서 여러번 링크를 생성하는 것에 문제가 있었고, 안드로이드에서 Video 컨트롤러를 구현하는데 어려움을 겪었습니다.&lt;/p&gt; &lt;p&gt;그래서 react-native-video를 사용하는 것을 중지하고, react-native-youtube를 사용하기로 결정하였습니다. react-native-youtube도 iOS에서는 별 문제가 없었으나, Android에서는 여러 플레이어를 동시에 표시할 수 없어서, 화면에 표시된 Youtube에 첫번째 동영상만 플레이어를 생성하고, 재생하도록 구성하였습니다.&lt;/p&gt; &lt;h3 id=&quot;리젝&quot;&gt;리젝&lt;/h3&gt; &lt;p&gt;역시 가장 넘기 힘든 산은 iOS의 앱 심사네요. 앱 기능의 MVP는 아래와 같습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;블로그 리스트: API를 통해 블로그 포스트 리스트들을 받아오고 이를 보여준다.&lt;/li&gt; &lt;li&gt;블로그 상세: 리스트에서 자세히 보고자 하는 아이템을 선택하면, 해당 블로그에 대한 상세 내용이 보인다.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;위에 기능을 구현하고, 앱을 등록하였지만, 단순히 웹 정보를 모아서 보여주는 것은 앱으로써 의미가 없으며, 네이티브 기능을 사용하지 않으므로 웹 서비스로 서비스를 제공하라며, 첫 리젝을 당했습니다. 이를 통과하기 위해 아래에 기능들을 추가하였습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;추천(좋아요) 기능&lt;/li&gt; &lt;li&gt;공유&lt;/li&gt; &lt;li&gt;최신순/픽업순&lt;/li&gt; &lt;li&gt;북마크&lt;/li&gt; &lt;li&gt;작가 팔로우&lt;/li&gt; &lt;li&gt;Youtube 비디오&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;위에 기능중 하나가 개발이 끝나면, 심사를 신청하는 식으로, 어떤 기능이 추가되면 통과되는지 확인하였습니다. 그 결과 Youtube 비디오를 앱 내에서 볼 수 있도록 하는 기능을 추가하고 나서, 첫 리젝은 통과하였습니다.&lt;/p&gt; &lt;p&gt;그 다음은, 앱이 사용자가 올린 정보를 공유하고 있는데, 보기 싫은 정보를 숨기는 기능이 없다고 리젝을 당했습니다. 그래서 다음과 같은 기능을 추가하였습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;해당 게시물 숨기기&lt;/li&gt; &lt;li&gt;해당 작가 게시물 숨기기&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;그리고 심사를 신청하니, 통과되어 지금은 앱 스토어에 등록된 상태네요. 이렇게 통과된 앱을 구글 플레이에 배포하였고, 안드로이드는 별 문제없이 배포되었습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;개발-기간&quot;&gt;개발 기간&lt;/h2&gt; &lt;p&gt;전체 서비스 개발 기간은 2개월 정도인거 같습니다. 린하게 개발을 하다보니, 정확히 어떤게 얼마나 걸렸는지 딱 짤라서 이야기하기가 어렵지만, 좀 구별해보면 아래와 같습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;기획 및 자료 조사: 1주일&lt;/li&gt; &lt;li&gt;디자인: 1주일&lt;/li&gt; &lt;li&gt;앱 개발: 1달&lt;/li&gt; &lt;li&gt;크롤링 서버: 1달&lt;/li&gt; &lt;li&gt;API 서버: 1달&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 기간은 크게 의미가 없습니다. 아침, 점심, 저녁, 주말 등 시간있을 때 틈틈히 만든거이기 때문에, 실제 걸린 시간이랑은 관계가 없습니다. 또 린스타일로 개발을 하고 있기 때문에 정확히 시간 산정이 아니고, 체감상 걸린 시간을 입니다.&lt;/p&gt; &lt;p&gt;개발을 5월부터 시작했고, 6월 말에 릴리스했습니다.&lt;/p&gt; &lt;h2 id=&quot;회고&quot;&gt;회고&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;이번 토이프로젝트는 지금까지 만든 토이프로젝트중에서 처음으로 서버를 사용하는 프로젝트였다.&lt;/li&gt; &lt;li&gt;가난한 개발자이다보니, 어떻게 하면 저렴하게 서비스를 할 수 있을지 고민을 많이 했다.&lt;/li&gt; &lt;li&gt;역시 만들어보지 않으면, 어려움을 모른다.(이런 이유의 리젝도 있구나)&lt;/li&gt; &lt;li&gt;개발은 재밌다.&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;download_link_container&quot;&gt; &lt;a class=&quot;download_link_ios&quot; href=&quot;https://apps.apple.com/app/clog/id1513780724&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/apple_download.png&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다, ios 다운로드&quot; /&gt; &lt;/a&gt; &lt;a class=&quot;download_link_android&quot; href=&quot;https://play.google.com/store/apps/details?id=io.github.dev.yakuza.clog&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;/assets/images/google play_download.png&quot; alt=&quot;Clog - 세상의 모든 정보를 모아보다, 안드로이드 다운로드&quot; /&gt; &lt;/a&gt; &lt;/div&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/clog/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/clog/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">react-native-firebase V6 Admob</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-firebase-v6-admob/" rel="alternate" type="text/html" title="react-native-firebase V6 Admob"/><published>2020-05-12T00:00:00+09:00</published><updated>2020-06-10T19:01:48+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-natiev-firebase-설치-및-준비&quot;&gt;react-natiev-firebase 설치 및 준비&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#admob-설정&quot;&gt;Admob 설정&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#구글-애드몹-가입&quot;&gt;구글 애드몹 가입&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#admob-생성&quot;&gt;Admob 생성&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#라이브러리-설치&quot;&gt;라이브러리 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#admob-id-설정&quot;&gt;Admob ID 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#javascript&quot;&gt;Javascript&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#광고-설정&quot;&gt;광고 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#banner-광고&quot;&gt;Banner 광고&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#예제-소스&quot;&gt;예제 소스&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;React Native 프로젝트에서 &lt;a href=&quot;https://firebase.google.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt;의 &lt;a href=&quot;https://firebase.google.com/docs/crashlytics&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Admob&lt;/a&gt;을 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;를 사용하는 방법에 대해서 알아보려고 합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase(V6): &lt;a href=&quot;https://rnfirebase.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://rnfirebase.io/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 블로그는 시리즈로 제작되어있습니다. 다른 내용을 확인하고 싶으신 분들은 아래에 블로그 리스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-crashlytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase V6 Admob&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;react-native-firebase의 이전 버전(V5)을 사용하는 방법에 대해서는 아래에 블로그 리스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;Firebase Analytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/firebase-crashlytics/&quot; target=&quot;_blank&quot;&gt;Firebase Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;Firebase Admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase(V5)를 이용한 Push message&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;react-natiev-firebase-설치-및-준비&quot;&gt;react-natiev-firebase 설치 및 준비&lt;/h2&gt; &lt;p&gt;아래에 블로그를 참고하여 react-native-firebase를 설치하고, Firebase 프로젝트를 생성합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 설치&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;admob-설정&quot;&gt;Admob 설정&lt;/h2&gt; &lt;p&gt;React Native 프로젝트에서 Admob을 사용하기 위해서는, Admob 서비스를 이용할 필요가 있습니다.&lt;/p&gt; &lt;h3 id=&quot;구글-애드몹-가입&quot;&gt;구글 애드몹 가입&lt;/h3&gt; &lt;p&gt;구글 애드몹(Google admob) 사이트로 이동하여 회원가입을 합니다. 일반적인 회원가입/로그인 절차임으로 설명을 생략합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;구글 애드몹(Google admob) 사이트: &lt;a href=&quot;https://www.google.com/admob/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.google.com/admob/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;admob-생성&quot;&gt;Admob 생성&lt;/h3&gt; &lt;p&gt;구글 애드몹(Google admob) 사용법에 대해서 알아봅니다. 구글 애드몹(Google admob)을 사용하기 위해 구글 애드몹(Google admob) 사이트에 회원가입을 하고 로그인을 하면 아래와 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/signin_google_admob.jpg&quot; alt=&quot;signin google admob&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/signin_google_admob.jpg&quot; alt=&quot;signin google admob&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;하단에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET STARTED&lt;/code&gt; 버튼을 눌러 구글 애드몹(Google Admob)에 사용을 시작합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/configure_admob.jpg&quot; alt=&quot;configure admob&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/configure_admob.jpg&quot; alt=&quot;configure admob&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;이미 앱이 마켓에 등록되어있는지 여부를 선택합니다. 우리는 아직 앱을 등록하지 않은 상태이므로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NO&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/configure_app_name.jpg&quot; alt=&quot;configure app name on admob&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/configure_app_name.jpg&quot; alt=&quot;configure app name on admob&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 애드몹(Google admob)을 사용하기 위해 앱 이름을 작성하고 사용할 플랫폼을 선택합니다. 우리는 우선 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iOS&lt;/code&gt;를 선택하여 진행하겠습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/completed_configure.jpg&quot; alt=&quot;completed to configure&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/completed_configure.jpg&quot; alt=&quot;completed to configure&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 애드몹(Google admob) 등록이 완료되었습니다. 친절하게 하단에 다음 단계에 대한 설명이 잘 나와있습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;react-native-admob을 설정할때 필요한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App ID&lt;/code&gt;를 복사해둡니다.&lt;/li&gt; &lt;li&gt;광고 타입(ad unit)을 구글 애드몹(Google admob)에서 설정합니다.&lt;/li&gt; &lt;li&gt;앱을 앱스토어에 등록하면 구글 애드몹(Google Admob)에서 연결해줘야합니다.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;하단에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NEXT: CREATE AD UNIT&lt;/code&gt;을 눌러 광고 타입 설정화면으로 이동합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/select_ad_uni.jpg&quot; alt=&quot;select advertisement type&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/select_ad_uni.jpg&quot; alt=&quot;select advertisement type&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;우리는 일단 배너 광고 사용해 보겠습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Banner&lt;/code&gt;의 하단에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/set_banner_name.jpg&quot; alt=&quot;input banner name&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/set_banner_name.jpg&quot; alt=&quot;input banner name&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;해당 배너의 이름을 설정합니다. 구글 애드몹(Google admob) 서비스에서 해당 배너를 쉽게 찾기 위한 이름이므로 자신이 쉽게 인식할 수 있는 이름을 설정합니다. 입력을 완료했으면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CREATE AD UNIT&lt;/code&gt; 버튼을 눌러 설정을 끝냅니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/finished_configuration.jpg&quot; alt=&quot;finished configuration&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-admob/finished_configuration.jpg&quot; alt=&quot;finished configuration&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 애드몹(Google admob)의 배너 설정을 완료했습니다. 다시 나온 App ID와 배너의 Ad Unit ID를 잘 복사해 둡니다.&lt;/p&gt; &lt;p&gt;안드로이드도 위와 같은 방식으로 배너 광고를 생성하여 App ID와 Ad Unit ID를 생성합니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;라이브러리-설치&quot;&gt;라이브러리 설치&lt;/h2&gt; &lt;p&gt;아래에 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Admob&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; @react-native-firebase/admob &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;admob-id-설정&quot;&gt;Admob ID 설정&lt;/h2&gt; &lt;p&gt;React Native 프로젝트의 루트 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firebase.json&lt;/code&gt; 파일을 만들고, Admob에서 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App ID&lt;/code&gt;를 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react-native&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;admob_android_app_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ca-app-pub-xxxxxxxx~xxxxxxxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;admob_ios_app_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ca-app-pub-xxxxxxxx~xxxxxxxx&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;iOS를 사용하시는 분들은 아래에 명령어를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ios&lt;/span&gt; pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;javascript&quot;&gt;Javascript&lt;/h2&gt; &lt;p&gt;이제 React Native에서 Admob을 사용하기 위한 소스코드를 살펴보도록 하겠습니다.&lt;/p&gt; &lt;h3 id=&quot;광고-설정&quot;&gt;광고 설정&lt;/h3&gt; &lt;p&gt;Admob에 광고를 요청하기 전에, 어떤 광고를 받고 싶은지 타겟 고객 기반으로 설정할 필요가 있습니다. 광고를 요청하기 전에 아래와 같이 광고를 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;admob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MaxAdContentRating&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@react-native-firebase/admob&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;admob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setRequestConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxAdContentRating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MaxAdContentRating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tagForChildDirectedTreatment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tagForUnderAgeOfConsent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Request config successfully set!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;maxAdContentRating: Admob의 광고 등급을 설정합니다. &lt;ul&gt; &lt;li&gt;G: 전체 관람가&lt;/li&gt; &lt;li&gt;PG: 보호자 감독 요망&lt;/li&gt; &lt;li&gt;T: 청소년 이상 관람가&lt;/li&gt; &lt;li&gt;MA: 청소년 관람 불가&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;tagForChildDirectedTreatment: 앱이 어린이용인 경우 true를 설정합니다.&lt;/li&gt; &lt;li&gt;tagForUnderAgeOfConsent: 앱이 성인 이하를 대상으로 하는 경우 true를 설정합니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이렇게 설정을 한 후, 앱에서 광고를 요청합니다.&lt;/p&gt; &lt;h3 id=&quot;banner-광고&quot;&gt;Banner 광고&lt;/h3&gt; &lt;p&gt;배너 광고를 사용하기 위해서는 아래와 같은 소스 코드를 이용합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BannerAd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BannerAdSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestIds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@react-native-firebase/admob&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__DEV__&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BANNER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ca-app-pub-xxxxxxxxxxxxx/yyyyyyyyyyyyyy&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BannerAd&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unitId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;adUnitId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BannerAdSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FULL_BANNER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requestNonPersonalizedAdsOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h3 id=&quot;예제-소스&quot;&gt;예제 소스&lt;/h3&gt; &lt;p&gt;제가 사용하고 있는 배너 광고 예제 소스입니다. 참고가 되면 좋겠습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;admob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MaxAdContentRating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BannerAd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BannerAdSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@react-native-firebase/admob&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;styled-components/native&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;~/ENV&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyledProp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRectangleBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SafeAreaView&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` background-color: #F4F5F8; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;` width: 100%; height: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyledProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isRectangleBanner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;70px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;; justify-content: center; align-items: center; `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;MEDIUM_RECTANGLE&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BannerContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setShowBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hideBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NodeJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NodeJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearHideBannerTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hideBannerTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearShowBannerTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showBannerTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;admob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setRequestConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxAdContentRating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MaxAdContentRating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tagForChildDirectedTreatment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tagForUnderAgeOfConsent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setShowBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearHideBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearShowBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__DEV__&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BANNER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bannerSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BannerAdSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SMART_BANNER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Contents&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRectangleBanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bannerSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;MEDIUM_RECTANGLE&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showBanner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BannerAd&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unitId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;adUnitID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bannerSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;requestNonPersonalizedAdsOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdLoaded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Advert loaded&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearHideBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hideBannerTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setShowBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearShowBannerTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showBannerTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setShowBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onAdFailedToLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Advert fail&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setShowBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setShowBanner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Contents&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Container&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BannerContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 React Native에 Admob을 표시하기 위해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;를 사용하는 방법에 대해서 알아보았습니다. 다른 광고를 사용하게 되면 해당 내용을 추가하도록 하겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-firebase-v6-admob/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-firebase-v6-admob/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">react-native-firebase V6 Crashlytics</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-firebase-v6-crashlytics/" rel="alternate" type="text/html" title="react-native-firebase V6 Crashlytics"/><published>2020-05-11T00:00:00+09:00</published><updated>2020-06-10T19:01:48+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-firebase-v6-crashlytics-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-firebase-v6-crashlytics/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-natiev-firebase-설치-및-준비&quot;&gt;react-natiev-firebase 설치 및 준비&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#라이브러리-설치&quot;&gt;라이브러리 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#firebase-프로젝트-설정&quot;&gt;Firebase 프로젝트 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ios-설정&quot;&gt;iOS 설정&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#build-phase-추가&quot;&gt;Build Phase 추가&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ios-프로젝트-실행&quot;&gt;iOS 프로젝트 실행&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#안드로이드-설정&quot;&gt;안드로이드 설정&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#fabric-설정&quot;&gt;Fabric 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#안드로이드-프로젝트-실행&quot;&gt;안드로이드 프로젝트 실행&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;React Native 프로젝트에서 &lt;a href=&quot;https://firebase.google.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt;의 &lt;a href=&quot;https://firebase.google.com/docs/crashlytics&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Crashlytics&lt;/a&gt;를 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;를 사용하는 방법에 대해서 알아보려고 합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase(V6): &lt;a href=&quot;https://rnfirebase.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://rnfirebase.io/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 블로그는 시리즈로 제작되어있습니다. 다른 내용을 확인하고 싶으신 분들은 아래에 블로그 리스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;react-native-firebase V6 Crashlytics&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;react-native-firebase의 이전 버전(V5)을 사용하는 방법에 대해서는 아래에 블로그 리스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;Firebase Analytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/firebase-crashlytics/&quot; target=&quot;_blank&quot;&gt;Firebase Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;Firebase Admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-fcm/&quot; target=&quot;_blank&quot;&gt;react-native-firebase(V5)를 이용한 Push message&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;react-natiev-firebase-설치-및-준비&quot;&gt;react-natiev-firebase 설치 및 준비&lt;/h2&gt; &lt;p&gt;아래에 블로그를 참고하여 react-native-firebase를 설치하고, Firebase 프로젝트를 생성합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 설치&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;라이브러리-설치&quot;&gt;라이브러리 설치&lt;/h2&gt; &lt;p&gt;아래에 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Crashlytics&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; @react-native-firebase/crashlytics &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어를 사용하여 iOS 프로젝트에 react-native-firebase의 Crashlytics를 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ios pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;firebase-프로젝트-설정&quot;&gt;Firebase 프로젝트 설정&lt;/h2&gt; &lt;p&gt;다음은 구글의 파이어베이스(Google Firebase)에서 프로젝트에 Crashlytics를 설정할 필요가 있습니다. Firebase의 Console로 이동한 후, 왼쪽 메뉴에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Crashlytics&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-add-sdk.jpg&quot; alt=&quot;crashlytics add sdk&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-add-sdk.jpg&quot; alt=&quot;crashlytics add sdk&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;상단에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add SDK&lt;/code&gt; 버튼을 눌러서 SDK를 추가합니다. 또한 상단에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Crashlytics&lt;/code&gt; 타이틀 옆에 있는 프로젝트를 선택하여 iOS/안드로이드로 변경 한 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add SDK&lt;/code&gt;를 눌러 iOS, 안드로이드 모두 SDK를 추가해 줍니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;ios-설정&quot;&gt;iOS 설정&lt;/h2&gt; &lt;p&gt;react-native-firebase의 Crashlytics를 사용하기 위해 iOS를 설정하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;h3 id=&quot;build-phase-추가&quot;&gt;Build Phase 추가&lt;/h3&gt; &lt;p&gt;iOS에서 Crashlytics를 사용하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Build Phase&lt;/code&gt;를 설정할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ios/[project name].xcworkspace&lt;/code&gt;을 선택하여 Xcode를 실행시킵니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-build-phase.jpg&quot; alt=&quot;crashlytics build phase&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-build-phase.jpg&quot; alt=&quot;crashlytics build phase&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;Xcode가 실행되면 왼쪽의 프로젝트를 선택하고 오른쪽 상단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Build Phases&lt;/code&gt; 탭을 선택합니다. Build Phase를 추가하기 위해, 왼쪽 상단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; 버튼을 선택하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New Run Script Phase&lt;/code&gt; 메뉴를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-add-script.jpg&quot; alt=&quot;crashlytics add script&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-add-script.jpg&quot; alt=&quot;crashlytics add script&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;New Run Script Phase 메뉴로 추가한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run Script&lt;/code&gt;를 열고 아래에 내용을 그대로 복사-붙여넣기 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PODS_ROOT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Fabric/run&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;ios-프로젝트-실행&quot;&gt;iOS 프로젝트 실행&lt;/h3&gt; &lt;p&gt;위와 같이 모든 설정이 끝났다면, 아래에 명령어를 통해 iOS 프로젝트를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run ios &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;안드로이드-설정&quot;&gt;안드로이드 설정&lt;/h2&gt; &lt;p&gt;react-native-firebase의 Crashlytics를 사용하기 위해 안드로이드를 설정하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;h3 id=&quot;fabric-설정&quot;&gt;Fabric 설정&lt;/h3&gt; &lt;p&gt;안드로이드에서 Crashlytics를 사용하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fabric&lt;/code&gt;을 설정할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/build.gradle&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... buildscript &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; ... repositories &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; ... maven &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; url &lt;span class=&quot;s1&quot;&gt;'https://maven.fabric.io/public'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; dependencies &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; ... classpath &lt;span class=&quot;s1&quot;&gt;'io.fabric.tools:gradle:1.28.1'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; ... &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apply plugin: &lt;span class=&quot;s2&quot;&gt;&quot;com.android.application&quot;&lt;/span&gt; apply plugin: &lt;span class=&quot;s1&quot;&gt;'io.fabric'&lt;/span&gt; ... applicationVariants.all &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; variant -&amp;gt; ... &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; crashlytics &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; enableNdk &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;안드로이드-프로젝트-실행&quot;&gt;안드로이드 프로젝트 실행&lt;/h3&gt; &lt;p&gt;위와 같이 설정하였다면 아래에 명령어를 사용하여 안드로이드 프로젝트를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run android &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 Firebase의 Crashlytics를 사용하기 위해, react-native-firebase 라이브러리를 사용하는 방법에 대해서 알아보았습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-integration.jpg&quot; alt=&quot;crashlytics integration&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/crashlytics-integration.jpg&quot; alt=&quot;crashlytics integration&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;react-native-firebase로 Crashlytics를 잘 설정하고, React Native 프로젝트를 잘 실행하였다면, 위와 같은 화면을 확인할 수 있습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-firebase-v6-crashlytics/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">react-native-firebase V6 설치</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-firebase-v6-installation/" rel="alternate" type="text/html" title="react-native-firebase V6 설치"/><published>2020-05-10T00:00:00+09:00</published><updated>2020-06-10T19:01:48+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-firebase-v6-installation/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#라이브러리-설치&quot;&gt;라이브러리 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#firebase-프로젝트-생성&quot;&gt;Firebase 프로젝트 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ios-설정&quot;&gt;iOS 설정&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#bundle-id-변경&quot;&gt;Bundle ID 변경&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#firbase-ios-프로젝트-설정&quot;&gt;Firbase iOS 프로젝트 설정&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#안드로이드-설정&quot;&gt;안드로이드 설정&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#안드로이드-패키지명-수정&quot;&gt;안드로이드 패키지명 수정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#firbase-안드로이드-프로젝트-설정&quot;&gt;Firbase 안드로이드 프로젝트 설정&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;React Native 프로젝트에서 &lt;a href=&quot;https://firebase.google.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt;를 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;를 설치하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase(V6): &lt;a href=&quot;https://rnfirebase.io/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://rnfirebase.io/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;react-native-firebase의 이전 버전(V5)을 사용하는 방법에 대해서는 아래에 블로그 리스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-analytics/&quot; target=&quot;_blank&quot;&gt;Firebase Analytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/firebase-crashlytics/&quot; target=&quot;_blank&quot;&gt;Firebase Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-admob/&quot; target=&quot;_blank&quot;&gt;Firebase Admob&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-fcm/&quot; target=&quot;_blank&quot;&gt;react-native-firebase(V5)를 이용한 Push message&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 블로그는 시리즈로 제작되어있습니다. 다른 내용을 확인하고 싶으신 분들은 아래에 블로그 리스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;react-native-firebase V6 설치&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-crashlytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;라이브러리-설치&quot;&gt;라이브러리 설치&lt;/h2&gt; &lt;p&gt;아래에 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebase&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; @react-native-firebase/app &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;아래에 명령어를 사용하여 iOS 프로젝트에 react-native-firebase를 연결합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ios pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;firebase-프로젝트-생성&quot;&gt;Firebase 프로젝트 생성&lt;/h2&gt; &lt;p&gt;다음은 구글의 파이어베이스(Google Firebase)에서 프로젝트를 생성할 필요가 있습니다. 아래에 링크를 눌러 구글 파이어베이스(Google Firebase)로 이동합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;구글 파이어베이스(Google Firebase): &lt;a href=&quot;https://firebase.google.com&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://firebase.google.com&lt;/a&gt;&lt;/p&gt; &lt;!-- If javascript is not on. --&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase.jpg&quot; alt=&quot;google firebase&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;!-- If javascript is present. --&gt; &lt;p&gt;&lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase.jpg&quot; alt=&quot;google firebase&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;오른쪽 위에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIGN IN&lt;/code&gt; 버튼을 눌러 로그인합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-after-login.jpg&quot; alt=&quot;google firebase after login&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-after-login.jpg&quot; alt=&quot;google firebase after login&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;로그인을 했다면 오른쪽 위에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GO TO CONSOLE&lt;/code&gt;을 눌러 구글 파이어베이스 콘솔(Google Firebase Console)로 이동합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console.jpg&quot; alt=&quot;google firebase console&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console.jpg&quot; alt=&quot;google firebase console&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 파이어베이스 콘솔(Google Firebase Console)에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+ Add project&lt;/code&gt;를 눌러 프로젝트를 추가합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-add-project.jpg&quot; alt=&quot;google firebase console add project&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-add-project.jpg&quot; alt=&quot;google firebase console add project&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;위와 같은 화면에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enter your project name&lt;/code&gt;에 만들고자하는 Firebase 프로젝트 이름을 입력합니다. 입력을 하였다면 하단에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Continue&lt;/code&gt; 버튼을 눌러 다음으로 진행합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-add-google-analytics.jpg&quot; alt=&quot;google firebase console add google analytics&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-add-google-analytics.jpg&quot; alt=&quot;google firebase console add google analytics&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;프로젝트 명을 입력하였다면, 위와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Analytics&lt;/code&gt;을 연동하는 화면을 볼 수 있습니다. Google Analytics와 연동을 원하지 않는 경우, 왼쪽 하단의 스위치를 선택하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Disable&lt;/code&gt;로 변경하고 Firebase 프로젝트를 생성합니다.&lt;/p&gt; &lt;p&gt;Google Analytics와 연동을 원하는 분들은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Continue&lt;/code&gt;를 눌러 진행합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-integrate-google-analytics.jpg&quot; alt=&quot;google firebase console add integrate google analytics&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-integrate-google-analytics.jpg&quot; alt=&quot;google firebase console add integrate google analytics&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;Google Analytics 계정을 선택하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create project&lt;/code&gt; 버튼을 눌러 Firebase 프로젝트를 생성합니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;ios-설정&quot;&gt;iOS 설정&lt;/h2&gt; &lt;p&gt;react-native-firebase를 사용하기 위해 iOS를 설정하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;h3 id=&quot;bundle-id-변경&quot;&gt;Bundle ID 변경&lt;/h3&gt; &lt;p&gt;Firebase에 iOS 프로젝트를 생성하기 전에, iOS의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bundle ID&lt;/code&gt;를 변경할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ios/[project name].xcworkspace&lt;/code&gt;를 선택하여 Xcode를 실행합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/ios-change-bundle-id.jpg&quot; alt=&quot;change ios bundle id&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/ios-change-bundle-id.jpg&quot; alt=&quot;change ios bundle id&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;왼쪽 상단의 프로젝트 명을 선택하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;General&lt;/code&gt; 탭으로 이동하면, 상단에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bundle Identifier&lt;/code&gt;를 확인할 수 있습니다. 이 Bundle ID를 자신의 프로젝트에 맞게 변경해 줍니다.&lt;/p&gt; &lt;h3 id=&quot;firbase-ios-프로젝트-설정&quot;&gt;Firbase iOS 프로젝트 설정&lt;/h3&gt; &lt;p&gt;구글 파이어베이스 콘솔(Google Firebase Console)에서 프로젝트를 선택하면 다음과 같은 화면이 보입니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-project.jpg&quot; alt=&quot;google firebase console project&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-project.jpg&quot; alt=&quot;google firebase console project&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;중앙에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iOS&lt;/code&gt; 버튼을 눌러 iOS 설정 화면으로 이동합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-project-ios.jpg&quot; alt=&quot;google firebase console project ios&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/google-firebase-console-project-ios.jpg&quot; alt=&quot;google firebase console project ios&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;개발한 앱에 번들 ID(bundle ID)를 입력하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Register app&lt;/code&gt; 버튼을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/googleservice-info-plist-download.jpg&quot; alt=&quot;GoogleService-Info.plist download&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/googleservice-info-plist-download.jpg&quot; alt=&quot;GoogleService-Info.plist download&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 파이어베이스(Google Firebase)가 생성한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GoogleService-Info.plist&lt;/code&gt; 파일을 다운로드하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;info.plist&lt;/code&gt;와 동일한 위치에 추가합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GoogleService-Info.plist&lt;/code&gt; 파일 추가를 완료했다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Next&lt;/code&gt; 버튼을 클릭합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/add-firebase-sdk-google-analytics.jpg&quot; alt=&quot;add Firebase SDK&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/add-firebase-sdk-google-analytics.jpg&quot; alt=&quot;add Firebase SDK&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;화면에 표시된 방식으로 구글 파이어베이스 SDK(Google Firebase SDK)를 React Native 프로젝트에 추가할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./ios/Podfile&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blaboo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Firebase/Analytics'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Google Analytics를 사용하지 않는 분들은 위와 같이 코드를 수정할 필요가 없습니다.&lt;/p&gt; &lt;p&gt;아래에 명령어를 통해 구글 파이어베이스 SDK(Google Firebase SDK)를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# pod update&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/edit-appdelegate.jpg&quot; alt=&quot;edit appdelegate.m for firebase&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/edit-appdelegate.jpg&quot; alt=&quot;edit appdelegate.m for firebase&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;React Native 프로젝트의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppDelegate.m&lt;/code&gt; 파일에 아래와 같이 코드를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppDelegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UIApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;launchOptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FIRApp&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;구글 파이어베이스 SDK(Google Firebase SDK)를 초기화합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/connect-firebase-to-app.jpg&quot; alt=&quot;connect firebase to app&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/connect-firebase-to-app.jpg&quot; alt=&quot;connect firebase to app&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;저는 이 부분에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Skip this step&lt;/code&gt;을 눌러 이 부분을 건너 뛰었습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;안드로이드-설정&quot;&gt;안드로이드 설정&lt;/h2&gt; &lt;p&gt;이제 react-native-firebase를 사용하기 위해 안드로이드를 설정하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;h3 id=&quot;안드로이드-패키지명-수정&quot;&gt;안드로이드 패키지명 수정&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;React Native 프로젝트 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/BUCK&lt;/code&gt; 파일 수정&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... android_build_config( ... package = &quot;package_name&quot;, ) ... android_resource( ... package = &quot;package_name&quot;, ... ) ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;React Native 프로젝트 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/src/main/AndroidManifest.xml&lt;/code&gt; 파일 수정&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;package_name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;React Native 프로젝트 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/src/main/java/com/ProjectName/MainActivity.java&lt;/code&gt; 파일 수정&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;React Native 프로젝트 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/src/main/java/com/ProjectName/MainApplication.java&lt;/code&gt; 파일 수정&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;React Native 프로젝트 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 파일 수정&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applicationId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이렇게 패키지명을 변경하였다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/src/main/java/com/[App Name]/MainActivity.java&lt;/code&gt;으로 되어 있는 폴더 구조를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/src/main/java/[Package Name Folder]/MainActivity.java&lt;/code&gt;과 같이 변경해줄 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h3 id=&quot;firbase-안드로이드-프로젝트-설정&quot;&gt;Firbase 안드로이드 프로젝트 설정&lt;/h3&gt; &lt;p&gt;구글 파이어베이스 콘솔(Google Firebase Console)에서 왼쪽 상단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Project Overview&lt;/code&gt;를 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/firebase-project-overview.jpg&quot; alt=&quot;Google Firebase Console Project Overview&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/firebase-project-overview.jpg&quot; alt=&quot;Google Firebase Console Project Overview&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;상단에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+ Add app&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;안드로이드(Android) 아이콘&lt;/code&gt;을 눌러 안드로이드(Android) 프로젝트 설정으로 이동합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/register-android.jpg&quot; alt=&quot;Google Firebase Android app register&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/register-android.jpg&quot; alt=&quot;Google Firebase Android app register&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;안드로이드 패키지명(Android Package Name)을 입력하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Register app&lt;/code&gt;을 선택합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/set-google-services-json.jpg&quot; alt=&quot;Google Firebase google-services.json setting&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/set-google-services-json.jpg&quot; alt=&quot;Google Firebase google-services.json setting&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;구글 파이어베이스(Google Firebase)가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;google-services.json&lt;/code&gt; 파일을 React Native 프로젝트의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app&lt;/code&gt; 폴더에 복사합니다. 그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Next&lt;/code&gt;버튼을 눌러 다음 단계로 진행합니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/setting-android.jpg&quot; alt=&quot;Google Firebase setting on android&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/react-native-firebase-v6-installation/setting-android.jpg&quot; alt=&quot;Google Firebase setting on android&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;React Native 프로젝트가 있는 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/build.gradle&lt;/code&gt; 파일을 열고 아래에 코드를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;buildscript&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jcenter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;com.android.tools.build:gradle:3.5.2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;com.google.gms:google-services:4.3.3&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allprojects&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mavenLocal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jcenter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;repositories&lt;/code&gt;에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;google()&lt;/code&gt;이 포함되어 있어야 하며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jcenter()&lt;/code&gt;보다 위에 선언되어 있어야 됩니다.&lt;/p&gt; &lt;p&gt;React Native 프로젝트가 있는 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 파일을 열고 아래에 코드를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// under 59 version&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// implementation project(':react-native-firebase')&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;com.google.firebase:firebase-analytics:17.2.2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Google Analytics를 사용하지 않는 분들은 위 내용을 추가하지 않으셔도 됩니다. 그리고 동일한 파일 제일 하단에 아래에 코드를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;com.google.gms.google-services&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;다음은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./android/build.gradle&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;buildscript&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;com.android.tools.build:gradle:3.4.2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;com.google.gms:google-services:4.3.3&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 React Native에서 Firebase를 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-firebae&lt;/code&gt;를 설치하는 방법에 대해서 알아보았습니다. 다른 기능들을 추가하는 방법에 대해서는 아래에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-crashlytics/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Crashlytics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/react-native-firebase-v6-admob/&quot; target=&quot;_blank&quot;&gt;react-native-firebase V6 Admob&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-firebase-v6-installation/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-firebase-v6-installation/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">React Native에 Multidex 설정하기</title><link href="https://dev-yakuza.github.io/ko/react-native/react-native-multidex/" rel="alternate" type="text/html" title="React Native에 Multidex 설정하기"/><published>2020-05-09T00:00:00+09:00</published><updated>2020-05-11T17:06:47+09:00</updated><id>https://dev-yakuza.github.io/react-native/react-native-multidex-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/react-native-multidex/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gradle-설정&quot;&gt;Gradle 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#java-파일-수정&quot;&gt;Java 파일 수정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;React Native로 앱을 개발하다보면 아래와 같은 에러를 나올 때가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cannot fit requested classes &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;single dex file &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 문제를 해결하기 위해 React Native 프로젝트에 Multidex를 설정할 필요가 있습니다. 그럼 React Native 프로젝트에 Multidex를 설정하는 방법에 대해서 알아봅시다.&lt;/p&gt; &lt;h2 id=&quot;gradle-설정&quot;&gt;Gradle 설정&lt;/h2&gt; &lt;p&gt;React Native 프로젝트의 안드로이드에 Multidex를 설정하기 위해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultConfig&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;versionName&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;multiDexEnabled&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;multidex_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;2.0.1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;androidx.multidex:multidex:$multidex_version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;java-파일-수정&quot;&gt;Java 파일 수정&lt;/h2&gt; &lt;p&gt;위와 같이 Gradle 파일을 수정하였다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MainApplication.java&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;androidx.multidex.MultiDexApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainApplication&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MultiDexApplication&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReactApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 React Native에 Multidex를 설정하는 방법에 대해서 알아보았습니다. 이렇게 설정한 후, 아래에 명령어로 안드로이드를 실행하면 문제없이 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run android &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 블로그 포스트가 React Native로 안드로이드 프로젝트를 진행하시는 분들께 조금이라도 도움이 되었으면 좋겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-multidex/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/react-native-multidex/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">React Native용 오픈소스 만들기</title><link href="https://dev-yakuza.github.io/ko/react-native/make-opensource-library/" rel="alternate" type="text/html" title="React Native용 오픈소스 만들기"/><published>2020-04-27T00:00:00+09:00</published><updated>2020-06-10T19:01:48+09:00</updated><id>https://dev-yakuza.github.io/react-native/make-opensource-library-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/react-native/make-opensource-library/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-저장소&quot;&gt;GitHub 저장소&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#packagejson&quot;&gt;package.json&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#개발-환경-구성&quot;&gt;개발 환경 구성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#라이브러리-개발하기&quot;&gt;라이브러리 개발하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#배포하기&quot;&gt;배포하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;React Native로 개발을 해보면서, 언제나 남들이 만들어 놓은 오픈 소스를 가져다 사용하였습니다. 마음 한 구석에 나도 오픈소스 만들어봐야지 하는 마음이 있었으나, 시간이 없다는 핑계로 잘 실천하지 못했습니다.&lt;/p&gt; &lt;p&gt;하지만 시간이 생겨 정작 만들어 보려고 하니, 어디서부터 어떻게 만들어야할지 막막했습니다. 여러분도 저처럼 오픈소스를 만들어보고 싶지만, 어떻게 시작해야할지 막막한 분들을 위해, 오픈 소스를 어떻게 만드는지에 대해서 공유합니다.&lt;/p&gt; &lt;p&gt;아래 링크는 제가 만든 오픈 소스입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;NPM: &lt;a href=&quot;https://www.npmjs.com/package/react-native-image-modal&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-image-modal&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;npm&quot;&gt;NPM&lt;/h2&gt; &lt;p&gt;이번 블로그에서 소개할 오픈 소스 제작 방법은 React Native의 Javascript 부분만을 다루고 있습니다. 네이티브 모듈을 제작하는 방법은 포함되어 있지 않음을 알려드립니다.&lt;/p&gt; &lt;p&gt;앞으로 제작할 Javascript 오픈 소스를 사용하기 위해서는, NPM(Node Package Manager)에 배포할 필요가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;NPM: &lt;a href=&quot;https://www.npmjs.com/package/react-native-image-modal&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-image-modal&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;오픈 소스 제작에 앞서 아래에 블로그 포스트를 확인하여, 자신이 개발할 오픈소스를 NPM에 배포 가능한 상태로 준비하시기를 권장합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/share/deploy-npm-library/&quot; target=&quot;_blank&quot;&gt;NPM에 자신의 라이브러리 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;github-저장소&quot;&gt;GitHub 저장소&lt;/h2&gt; &lt;p&gt;오픈소스를 공유하기 위한 최고의 방법은 GitHub죠. 지금부터 제작할 오픈소스 라이브러리의 소스코드를 공유하기 위해 GitHub 저장소(Repository)를 생성합니다.&lt;/p&gt; &lt;p&gt;아직 GitHub의 계정을 가지고 계시지 않는다면, 아래에 링크를 통해 무료로 회원가입하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub:&lt;a href=&quot;https://github.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;GitHub의 저장소를 생성할 때, NPM에 이미 배포된 라이브러리와 중복되지 않는 이름으로 생성하도록 합니다. NPM에서 중복 여부를 확인하는 방법에 대해서는 아래에 블로그 포스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;NPM에 자신의 라이브러리 배포하기: &lt;a href=&quot;https://dev-yakuza.github.io/share/deploy-npm-library/#npm-info&quot; target=&quot;_blank&quot;&gt;npm info&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;GitHub 저장소를 만들었다면, 자신의 로컬 PC에 Clone합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Your repository URL] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;packagejson&quot;&gt;package.json&lt;/h2&gt; &lt;p&gt;Javascript 오픈 소스를 개발하고 배포하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일이 필요합니다. 아래에 명령어를 사용하여 package.json 파일을 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd [Your Project folder]&lt;/span&gt; npm init &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;package.json 파일 생성에 대한 자세한 설명은 아래에 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;NPM에 자신의 라이브러리 배포하기: &lt;a href=&quot;https://dev-yakuza.github.io/share/deploy-npm-library/#npm-init&quot; target=&quot;_blank&quot;&gt;npm init&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;개발-환경-구성&quot;&gt;개발 환경 구성&lt;/h2&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Typescript&lt;/code&gt;로 React Native의 라이브러리를 개발하려고 합니다. 지금부터 Typescript와 React Native를 개발할 환경을 구축해 봅시다.&lt;/p&gt; &lt;p&gt;우선 아래에 명령어를 사용하여 React Native 프로젝트를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native init Develop &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 프로젝트는 React Native 라이브러리를 개발할 때 사용할 예정입니다. 다음으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tsconfig.json&lt;/code&gt; 파일을 생성하고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;esnext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;es5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;es6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;es2016&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;es2017&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sourceMap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;allowJs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jsx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;react-native&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;declaration&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;declarationMap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;moduleResolution&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;forceConsistentCasingInFileNames&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;noImplicitReturns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;noImplicitThis&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;noImplicitAny&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;strictNullChecks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;suppressImplicitAnyIndexErrors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;noUnusedLocals&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;outDir&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;skipLibCheck&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;allowSyntheticDefaultImports&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;removeComments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;include&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;exclude&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node_modules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Develop&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DevelopWithExpo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Example&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ExampleWithExpo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;옵션에 대한 자세한 설명은 생략하도록 하겠습니다. 다만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;include&quot;: [&quot;src&quot;],&lt;/code&gt;를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더에 있는 파일들을 빌드할 예정이며 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;outDir&quot;: &quot;dist&quot;,&lt;/code&gt; 옵션을 통해 빌드한 결과물은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist&lt;/code&gt; 폴더에 저장할 예정입니다.&lt;/p&gt; &lt;p&gt;다음으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist/index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;types&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist/index.d.ts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint --ext .tsx --ext .ts src/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --check ./src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rm -rf Develop/dist &amp;amp;&amp;amp; tsc -w --outDir Develop/dist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start:expo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rm -rf DevelopWithExpo/dist &amp;amp;&amp;amp; tsc -w --outDir DevelopWithExpo/dist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prepare&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rm -rf dist &amp;amp;&amp;amp; tsc&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src/**/*.{ts,tsx}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint --ext .tsx --ext .ts src/ --fix&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;./src/**&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --write .&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;husky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hooks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pre-commit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;peerDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react-native&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@types/react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@types/react-native&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@typescript-eslint/eslint-plugin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.25.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@typescript-eslint/parser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.25.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eslint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;6.8.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eslint-plugin-prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.1.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eslint-plugin-react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;7.19.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eslint-plugin-react-hooks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.5.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;husky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4.2.3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.0.9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prettier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.0.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react-native&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;typescript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^3.7.5&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;하나하나 자세히 살펴보도록 하겠습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist/index.js&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;types&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist/index.d.ts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;NPM에게 라이브러리의 메인 파일이 뭔지, 타입 파일이 무엇인지 알려주었습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint --ext .tsx --ext .ts src/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --check ./src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rm -rf Develop/dist &amp;amp;&amp;amp; tsc -w --outDir Develop/dist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start:expo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rm -rf DevelopWithExpo/dist &amp;amp;&amp;amp; tsc -w --outDir DevelopWithExpo/dist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prepare&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rm -rf dist &amp;amp;&amp;amp; tsc&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라이브러리를 개발하면서 사용할 명령어들입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eslint&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prettier&lt;/code&gt;을 통해 개발중인 소스코드의 Formatting을 검사하는 명령어 입니다. 또한 아래에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint-staged&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;husky&lt;/code&gt; 설정을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit&lt;/code&gt;시 Formatting을 실행하도록 하였습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src/**/*.{ts,tsx}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint --ext .tsx --ext .ts src/ --fix&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;./src/**&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prettier --write .&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;husky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hooks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pre-commit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;자세한 내용은 아래에 블로그 포스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/eslint-prettier-husky-lint-staged/&quot; target=&quot;_blank&quot;&gt;React Native에서 ESLint, Prettier를 프로처럼 사용하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;라이브러리를 개발할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm start&lt;/code&gt; 명령어를 통해 Typescript를 빌드하면서 개발할 예정입니다. 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm publish&lt;/code&gt;로 개발한 라이브러리를 배포하게 되는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prepare&lt;/code&gt; 명령어를 선언하여 배포전에 Typescript를 자동으로 빌드하도록 설정하였습니다.&lt;/p&gt; &lt;p&gt;자세한 내용은 아래에 블로그를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;NPM에 자신의 라이브러리 배포하기: &lt;a href=&quot;https://dev-yakuza.github.io/share/deploy-npm-library/#npm-publish&quot; target=&quot;_blank&quot;&gt;npm publish&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;개발에 필요한 라이브러리들을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devDepenencies&lt;/code&gt;에 선언하였습니다. 이제 아래에 명령어를 통해 필요한 라이브러리들을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 완료되면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; 파일과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.prettierignore&lt;/code&gt; 파일을 생성하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;를 추가합니다.&lt;/p&gt; &lt;p&gt;이제 개발할 준비가 끝났습니다. 다음으로, 어떤식으로 라이브러리를 개발하게 되는지 살펴봅시다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;라이브러리-개발하기&quot;&gt;라이브러리 개발하기&lt;/h2&gt; &lt;p&gt;위에서 설정한 개발 환경을 보면, 우리는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더에 개발할 소스코드를 추가해야합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.tsx&lt;/code&gt; 파일을 생성하고, 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LibraryName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Text&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LibraryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Develop&lt;/code&gt; 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App.js&lt;/code&gt; 파일을 열고 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StyleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SafeAreaView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-native&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LibraryName&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./dist&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SafeAreaView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LibraryName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/SafeAreaView&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;justifyContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alignItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 아래에 명령어를 사용하여 개발한 Typescript를 빌드합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm start &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에서 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start&lt;/code&gt; 명령어를 보면 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;rm -rf Develop/dist &amp;amp;&amp;amp; tsc -w --outDir Develop/dist&quot;&lt;/span&gt;, &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;명령어를 자세히 보면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Develop/dist&lt;/code&gt; 폴더를 삭제한 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tsc&lt;/code&gt;를 사용하여 빌드한 후, 결과물을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Develop/dist&lt;/code&gt; 폴더에 저장하도록 하였습니다. 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-w&lt;/code&gt; 옵션을 사용하여, 소스코드가 변경이 되면, 다시 빌드하도록 설정하였습니다. 따라서 위에 명령어를 사용한 후, 개발을 진행하면 됩니다.&lt;/p&gt; &lt;p&gt;그리고 다른 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD&lt;/code&gt;를 열고 아래에 명령어를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Develop npm run ios &lt;span class=&quot;c&quot;&gt;# npm run android&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그러면 우리가 개발하고 있는 라이브러리가 아래와 같이 잘 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/react-native/2020/make-opensource-library/hello-world.jpg&quot; alt=&quot;React Native용 오픈소스 만들기 - Hello world&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/react-native/2020/make-opensource-library/hello-world.jpg&quot; alt=&quot;React Native용 오픈소스 만들기 - Hello world&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;다시, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/index.tsx&lt;/code&gt; 파일을 열고 파일 내용을 수정하면 시뮬레이터 내용이 잘 갱신되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;배포하기&quot;&gt;배포하기&lt;/h2&gt; &lt;p&gt;이렇게 개발된 라이브러리를 배포하기 위해서는 아래에 명령어들을 사용해야 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm login npm publish &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;명령어에 대한 자세한 내용은 아래에 블로그를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/share/deploy-npm-library/&quot; target=&quot;_blank&quot;&gt;NPM에 자신의 라이브러리 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;React Native의 라이브러리를 개발하는 방법에 대해서 간략히 살펴보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포를 해야하기 때문에, NPM에 관한 블로그와 같이 보셔야 좀 더 이해하기 쉬울거 같네요.&lt;/p&gt; &lt;p&gt;여러분도 시간이 생기시면, 멋진 오픈소스를 개발하여, 개발자 문화에 동참해 보시는건 어떨까요?&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/make-opensource-library/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/react-native/2020/make-opensource-library/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">NPM에 자신의 라이브러리 배포하기</title><link href="https://dev-yakuza.github.io/ko/share/deploy-npm-library/" rel="alternate" type="text/html" title="NPM에 자신의 라이브러리 배포하기"/><published>2020-04-26T00:00:00+09:00</published><updated>2020-06-10T19:01:48+09:00</updated><id>https://dev-yakuza.github.io/share/deploy-npm-library-ko</id><content type="html" xml:base="https://dev-yakuza.github.io/share/deploy-npm-library/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-계정-만들기&quot;&gt;NPM 계정 만들기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-info&quot;&gt;npm info&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-init&quot;&gt;npm init&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-login&quot;&gt;npm login&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npmignore&quot;&gt;npmignore&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-publish&quot;&gt;npm publish&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-version&quot;&gt;npm version&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;지금까지 React Native로 개발하면서, 남들이 만들어 놓은 오픈 소스를 많이 사용하였습니다. 언제나 이렇게 오픈 소스만 사용하다가, 나도 한번 오픈 소스를 제작해봐야지 마음 먹고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-image-modal&lt;/code&gt;이라는 간단한 오픈 소스를 제작해 보았습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;NPM: &lt;a href=&quot;https://www.npmjs.com/package/react-native-image-modal&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-native-image-modal&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;React Native의 오픈 소스 라이브러리를 제작하는 방법에 대해서 궁금하신 분들은 아래에 블로그를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.github.io/react-native/make-opensource-library/&quot; target=&quot;_blank&quot;&gt;React Native용 오픈소스 만들기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 자신이 제작한 Javascript 라이브러리를 NPM(Node Package Manager)에 배포하는 방법에 대해서 알아봅니다.&lt;/p&gt; &lt;h2 id=&quot;npm-계정-만들기&quot;&gt;NPM 계정 만들기&lt;/h2&gt; &lt;p&gt;NPM에 자신이 만든 Javascript 라이브러리를 배포하기 위해서는 NPM 서비스의 계정이 필요합니다.&lt;/p&gt; &lt;p&gt;NPM의 계정이 존재하지 않는 분들은, 아래에 링크를 클릭하여 NPM 서비스로 이동한 후, NPM 계정을 생성합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;NPM 서비스 사이트: &lt;a href=&quot;https://www.npmjs.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.npmjs.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;npm-info&quot;&gt;npm info&lt;/h2&gt; &lt;p&gt;자신이 개발한 Javscript 라이브러리를 배포하기전에, 배포가 가능한 패키지명인지 확인할 필요가 있습니다. 당연하지만, 현재 NPM에 배포된 라이브러리와 동일한 이름을 사용할 수 없습니다.&lt;/p&gt; &lt;p&gt;아래에 명령어를 사용하여 자신의 Javascript 라이브러리명이 사용 가능한지 확인해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm info &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Javascript Package Name] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약, 중복된 이름이라면 아래와 같이, 이미 NPM에 배포된 라이브러리에 대한 정보를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npmdeploy@1.0.1 | MIT | deps: 1 | versions: 1 deploy projects easily &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the cloud. Optimised &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;GitLab CI https://gitlab.com/pushrocks/npmdeploy#README keywords: deploying, made, easy dist .tarball: https://registry.npmjs.org/npmdeploy/-/npmdeploy-1.0.1.tgz .shasum: c298d768aac7ccb89a38c20a0c904341fc87c484 dependencies: gitlab: ^1.6.0 maintainers: - lossless &amp;lt;npm@lossless.digital&amp;gt; dist-tags: latest: 1.0.1 published over a year ago by lossless &amp;lt;npm@lossless.digital&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약 중복된 이름이 아니라면 아래와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404&lt;/code&gt; 에러를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm ERR! code E404 npm ERR! 404 &lt;span class=&quot;s1&quot;&gt;'temp-npmdeploy'&lt;/span&gt; is not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the npm registry. npm ERR! 404 You should bug the author to publish it npm ERR! 404 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;or use the name yourself!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; npm ERR! 404 npm ERR! 404 Note that you can also &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;from a npm ERR! 404 tarball, folder, http url, or git url. npm ERR! 404 npm ERR! 404 &lt;span class=&quot;s1&quot;&gt;'temp-npmdeploy@latest'&lt;/span&gt; is not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the npm registry. npm ERR! 404 You should bug the author to publish it &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;or use the name yourself!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; npm ERR! 404 npm ERR! 404 Note that you can also &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;from a npm ERR! 404 tarball, folder, http url, or git url. &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;npm-init&quot;&gt;npm init&lt;/h2&gt; &lt;p&gt;자신이 개발한 Javascript 라이브러리를 NPM에 배포하기 위해서 NPM에 필요한 정보를 설정할 필요가 있습니다.&lt;/p&gt; &lt;p&gt;자신이 개발한 Javascript 라이브러리 폴더로 이동한 후, 아래에 명령어를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ProjectName&lt;/span&gt; npm init &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위의 명령어를 실행하면, 다음과 같은 화면을 볼 수 있습니다. 아래에 설명하는 내용은 추후에도 변경할 수 있으니, 부담없이 진행하시기 바랍니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This utility will walk you through creating a package.json file. It only covers the most common items, and tries to guess sensible defaults. See &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;json&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;definitive documentation on these fields and exactly what they &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; Use &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &amp;lt;pkg&amp;gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; afterwards to &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;a package and save it as a dependency &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the package.json file. Press ^C at any &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;to quit. package name: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;npmdeploy&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;폴더명을 기준으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package name&lt;/code&gt;을 결정할지, 다른 이름으로 설정할지 물어봅니다. 우리는 위에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm info&lt;/code&gt;로 배포 가능한 이름을 찾았습니다. 해당 이름을 입력합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.0.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그 다음, 버전을 물어봅니다. 버전은 기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;major.minor.patch&lt;/code&gt;를 사용합니다. 이미 개발이 완료되었고, 배포만을 남겨둔 상황이라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.0.0&lt;/code&gt;을 그대로 사용하면 됩니다. 아직 개발중이고, 완벽하지 않다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.0.1&lt;/code&gt;을 지정하여 안정적인 버전이 아님을 명시합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;description: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Javascript 라이브러리에 대한 설명을 작성하는 부분입니다. 자신의 라이브러리에 대한 설명을 작성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;entry point: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;index.js&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;개발한 Javascript 라이브러리의 Entry 파일(메인 파일)을 지정합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;test command&lt;/span&gt;: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;자신이 개발한 Javascript 라이브러리를 테스트할 수 있는 테스트 명령어를 입력합니다. 테스트를 실행할 명령어가 없다면, Enter 키를 눌러 진행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git repository: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;배포하려는 Javascript의 소스코드를 확인할 수 있는 Git 저장소의 URL을 입력합니다. URL이 존재하지 않느다면 Enter 키를 눌러 진행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keywords: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;배포하려는 Javascript를 쉽게 알 수 있는 키워드를 입력합니다. (ex&amp;gt; jQuery, react-native, reactjs 등)&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;author: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;배포하는 사람에 대한 정보를 입력합니다. 보통 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name &amp;lt;Email Address&amp;gt;&lt;/code&gt; 형식을 사용합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;license: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ISC&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;배포하려는 라이브러리의 라이센스에 관한 질문입니다. 자신의 라이브러리의 라이센스에 맞게 작성합니다. (ex&amp;gt; MIT, ISC 등)&lt;/p&gt; &lt;p&gt;라이센스에 키워드에 관해서는 아래의 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/github/creating-cloning-and-archiving-repositories/licensing-a-repository#searching-github-by-license-type&quot;&gt;GitHub license type&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이렇게 모든 항목을 입력하면 자신의 프로젝트 폴더안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일이 생성된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;npm-login&quot;&gt;npm login&lt;/h2&gt; &lt;p&gt;NPM에 자신의 라이브러리를 배포하기 위해서는, 아래에 명령어를 사용하여 NPM 서비스에 로그인 할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm login &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어를 실행하면 아래와 같이 로그인을 하기위한 절차가 실행됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Username: dev-yakuza Password: Email: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;this IS public&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; dev.yakuza@gmail.com Logged &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;as dev-yakuza on https://registry.npmjs.org/. &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에서 생성한 NPM 계정의 정보를 입력하여 로그인합니다. 로그인을 하였다면 아래에 명령어를 실행하여 제대로 로그인되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;whoami&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# dev-yakuza&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;npmignore&quot;&gt;npmignore&lt;/h2&gt; &lt;p&gt;실제 개발에는 필요하나, 개발이 완료된 라이브러리를 사용할 때는 필요없는 파일들이 있습니다. 예를 들어 테스트 코드, 예제 소스들이 이에 해당할 수 있습니다. 이렇게 개발에는 필요하나, 배포에는 불필요한 파일들을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmignore&lt;/code&gt; 파일을 통해 제외 시킬 수 있습니다.&lt;/p&gt; &lt;p&gt;아래에 내용은 제가 개발한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react-native-image-modal&lt;/code&gt;에 대한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmignore&lt;/code&gt; 파일입니다.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bas&quot;&gt;node_modules Develop DevelopWithExpo Example ExampleWithExpo .github demo &lt;/code&gt;&lt;/pre&gt; &lt;h2 id=&quot;npm-publish&quot;&gt;npm publish&lt;/h2&gt; &lt;p&gt;이제 NPM에 자신의 라이브러리를 배포할 준비가 되었습니다. 아래에 명령어를 통해 자신의 라이브러리를 NPM에 배포해 봅시다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm publish &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;라이브러리를 배포하기 전에 특정 명령어를 실행할 필요가 있다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;을 아래와 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prepare&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rm -rf dist &amp;amp;&amp;amp; tsc&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;저는 Typescript로 라이브러리를 개발했기 때문에, 배포전에 Typescript를 빌드할 필요가 있었습니다. 이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts&lt;/code&gt;에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prepare&lt;/code&gt; 명령어를 선언하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm publish&lt;/code&gt; 명령어를 실행할 때, 해당 명령어를 실행하게 됩니다.&lt;/p&gt; &lt;p&gt;이것으로 여러분이 개발한 라이브러리를 NPM에 배포하였습니다. 배포된 라이브러리를 사용하기 위해서는 여러분이 NPM 라이브러리를 사용하는 것과 동일하게 사용이 가능합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Your Package Name] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads&quot;&gt; &lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;h2 id=&quot;npm-version&quot;&gt;npm version&lt;/h2&gt; &lt;p&gt;NPM에 배포한 라이브러리를 수정하고 다시 배포해야할 일이 발생할 수 있습니다. 이렇게 재배포를 할 경우, 버전을 올려줄 필요가 있습니다.&lt;/p&gt; &lt;p&gt;버전을 올리기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일의 버전(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;version&quot;: &quot;0.0.1&quot;&lt;/code&gt;)을 직접 수정하고 배포해도 되지만 아래에 명령어를 통해 버전을 업데이트할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm version patch npm version minor npm version major &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위에 명령어를 필요한 상황에 맞게 사용하시면, 쉽게 버전을 올릴 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 자신이 개발한 Javascript 라이브러리를 NPM에 배포하는 방법에 대해서 알아보았습니다. 처음으로 오픈소스를 제작하고 NPM에 배포하다보니 나도 뭔가 개발자 문화에 동참하는 기분이 들었습니다.&lt;/p&gt; &lt;p&gt;&lt;!-- If javascript is not on. --&gt;&lt;/p&gt; &lt;noscript&gt;&lt;img src=&quot;/assets/images/category/share/2020/deploy-npm-library/npm-react-native-image-modal.jpg&quot; alt=&quot;NPM react-native-image-modal&quot; title=&quot;&quot; /&gt;&lt;/noscript&gt; &lt;p&gt;&lt;!-- If javascript is present. --&gt; &lt;img data-src=&quot;/assets/images/category/share/2020/deploy-npm-library/npm-react-native-image-modal.jpg&quot; alt=&quot;NPM react-native-image-modal&quot; title=&quot;&quot; class=&quot;blur-up lazyload&quot; /&gt;&lt;/p&gt; &lt;p&gt;여러분도 여러분만의 오픈소스를 제작하고 배포하여, 아름다운 개발자 문화에 동참해 보시는건 어떨까요?&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.github.io/assets/images/category/share/2020/deploy-npm-library/background.jpg"/><media:content medium="image" url="https://dev-yakuza.github.io/assets/images/category/share/2020/deploy-npm-library/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>